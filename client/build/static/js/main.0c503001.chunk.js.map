{"version":3,"sources":["images/C.jpg","framework/IAction.ts","state/appState.ts","reducer/appReducer.ts","components/NavBar.tsx","components/Categories.tsx","framework/history.ts","components/Login.tsx","components/Register.tsx","components/SingleAdvertise.tsx","components/ShowAllAdvertises.tsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["module","exports","ActionType","initial","UI","counter","loggedIn","waitingForResponse","Login","errorMessage","Register","searchbar","searchcategory","BM","user","firstname","lastname","username","password","email","advertises","comments","reducerFunctions","reducer","state","action","window","CS","log","type","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","clear_searchcategory","update_searchbar","nav","clearCategorySearch","event","clearSearch","clientAction","handleSearchbarChange","target","value","clearUser","loggedoutAction","user_logged_out","getUIState","className","to","onClick","this","name","placeholder","onChange","Component","update_searchcategory","Categories","handleCategorySearch","id","createBrowserHistory","login_error","user_logged_in","getBMState","handleLogout","onSubmit","handleSubmit","htmlFor","handleUsernameChange","handlePasswordChange","update_user","preventDefault","uiAction","server_called","axios","post","then","res","data","loggedinAction","history","push","get","register_error","updateAction","user_created","handleFirstnameChange","handleLastnameChange","handleEmailChange","advertise_updated","update_advertise","advertiseToChange","filter","advertise","_id","advertise_title","advertise_type","advertise_description","advertise_category","advertise_price","advertise_pictureUrl","advertise_owner","advertise_counter","advertise_status","advertise_message","advertise_city","delete_advertise","deleteAction","advertisesToKeep","SingleAdvertise","props","handleSwitchToEditMode","setState","edit_mode","handleTitleChange","newAdvertise","handleTypeChange","handleDescriptionChange","handleCategoryChange","handlePriceChange","handlePictureUrlChange","handleStatusChange","handleCityChange","handleSave","put","handleDelete","handleCommentUser","comment","comment_advertise","comment_text","comment_user","handleCommentDescription","handleCreateComment","e","console","edit","locationProp","location","pathname","size","rows","cols","maxLength","checked","src","alt","advertise_comment","disabled","React","PureComponent","create_advertise","unshift","ShowAllAdvertises","handleCreateAdvertise","bind","sort","a","b","Date","created_at","renderCategories","item","searchStr","toLowerCase","renderSearchbar","i","length","indexOf","renderOwnAdds","map","key","mongoose","Types","ObjectId","toString","copyrightImg","require","add_advertises_from_server","App","response","responseAction","catch","error","path","component","exact","Boolean","hostname","match","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","message","getState","createStore","dispatch","initializeStore","ReactDOM","render","stateCounter","document","getElementById","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c503001.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/C.887f96e7.jpg\";","export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    register_error = \"register_error\",\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_advertise = \"create_advertise\",\r\n    update_advertise = \"update_advertise\",\r\n    delete_advertise = \"delete_advertise\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    advertise_updated = \"advertise_updated\",\r\n    add_comment = \"add_comment\",\r\n    add_advertises_from_server = \"add_advertises_from_server\",\r\n    update_searchcategory= \"update_searchcategory\",\r\n    clear_searchcategory=\"clear_searchcategory\",\r\n    update_searchbar= \"update_searchbar\"\r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","export interface IUser {\r\n    _id?: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    username: string;\r\n    password: string;\r\n    email: string;\r\n}\r\n\r\nexport interface ILogin {\r\n    errorMessage: string;\r\n}\r\nexport interface IRegister {\r\n    errorMessage: string;\r\n}\r\n\r\nexport interface IUI {\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse: boolean;\r\n    Login: ILogin;\r\n    Register: IRegister;\r\n    searchcategory: string;\r\n    searchbar: string;\r\n}\r\n\r\nexport interface IAdvertiseData {\r\n    _id: string;\r\n    advertise_title: string;\r\n    advertise_type: string;\r\n    advertise_category: string;\r\n    advertise_description: string;\r\n    advertise_price: string;\r\n    advertise_pictureUrl: string;\r\n    advertise_owner?: string;\r\n    advertise_comment?: string;\r\n    advertise_counter: number;\r\n    advertise_status: string;\r\n    advertise_message?: string;\r\n    advertise_city: string;\r\n}\r\nexport interface ICommentData {\r\n    _id?: string;\r\n    comment_advertise: string,\r\n    comment_user: string;\r\n    comment_text: string;\r\n}\r\n\r\nexport interface IBM {\r\n    user: IUser;\r\n    advertises: IAdvertiseData[];\r\n    comments: ICommentData[];\r\n}\r\n\r\n\r\nexport interface IState {\r\n    UI: IUI;\r\n    BM: IBM;\r\n}\r\n\r\n// initial state \r\nexport const initial: IState = {\r\n    UI: {\r\n        counter: 0,\r\n        loggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: { errorMessage: \"\" },\r\n        Register: { errorMessage: \"\" },\r\n        searchbar: \"\",\r\n        searchcategory: \"\"\r\n    },\r\n    BM: {\r\n        user: {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\"\r\n        },\r\n        advertises: [],\r\n        comments: [],\r\n\r\n    }\r\n};\r\n","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport '../App.css';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState } from '../state/appState';\r\n\r\n//const logoName = require('../images/benb-logo.jpg')\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchCategoryAction extends IAction {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchAction extends IAction {\r\n    searchbar: string;\r\n}\r\nreducerFunctions[ActionType.clear_searchcategory] = function (newState: IState, action: ISearchCategoryAction) {\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    return newState;\r\n}\r\nreducerFunctions[ActionType.update_searchbar] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchbar = action.searchbar;\r\n    return newState;\r\n}\r\nexport default class nav extends Component {\r\n    //constructor(props: IProps) {\r\n    //    super(props);\r\n    //}\r\n\r\n    clearCategorySearch = (event: any) => {\r\n        const action: ISearchCategoryAction = {\r\n            type: ActionType.clear_searchcategory,\r\n            searchcategory: \"\",\r\n        };\r\n        this.clearSearch(event);\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSearchbarChange = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchbar,\r\n            searchbar: event.target.value,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    clearSearch = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchbar,\r\n            searchbar: \"\",\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    clearUser = (event: any) => {\r\n        const loggedoutAction: IAction = {\r\n            type: ActionType.user_logged_out\r\n        }\r\n        window.CS.clientAction(loggedoutAction);\r\n    }\r\n\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn) {\r\n            return (\r\n                <nav>\r\n                    <div className=\"TitleBar\">\r\n                        <h2>Buy or Sell something today!</h2>\r\n                        <p>Free listings of your private advertisements, join for free now!</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li><NavLink to=\"/\" onClick={this.clearCategorySearch} >Home</NavLink></li>\r\n                            <div className=\"nav-search\">\r\n                                <NavLink to=\"/\">\r\n                                    <input className=\"NavBarSearchButton\" type=\"text\" name=\"query\" placeholder=\"Search by title\" value={window.CS.getUIState().searchbar} onChange={this.handleSearchbarChange} />\r\n                                    <button className=\"NavBarSearchButton\" onClick={this.clearSearch}>Clear Searchfield</button>\r\n                                </NavLink>\r\n                            </div>\r\n                            <li><NavLink to=\"/showadvertises\" onClick={this.clearCategorySearch} >My advertises</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <nav>\r\n                    <div className=\"TitleBar\">\r\n                        <h2>Buy or Sell something today!</h2>\r\n                        <p>Free listings of your private advertisements, join for free now!</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li><NavLink to=\"/\" onClick={this.clearCategorySearch} >Home</NavLink></li>\r\n                            <div className=\"nav-search\">\r\n                                <NavLink to=\"/\">\r\n                                    <input className=\"NavBarSearchButton\" type=\"text\" placeholder=\"Search by title\" value={window.CS.getUIState().searchbar} onChange={this.handleSearchbarChange} />\r\n                                    <button className=\"NavBarSearchButton\" onClick={this.clearSearch}>Clear Searchfield</button>\r\n                                </NavLink>\r\n                            </div>\r\n                            <li><NavLink to=\"/register\" onClick={this.clearUser}>Join us</NavLink></li>\r\n                            <li><NavLink to=\"/login\" onClick={this.clearUser}>Login</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IState } from '../state/appState';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IWindow } from '../framework/IWindow';\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchAction extends IAction {\r\n    searchcategory: string;\r\n}\r\n\r\nreducerFunctions[ActionType.update_searchcategory] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchbar = \"\";\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    return newState;\r\n}\r\n\r\nexport default class Categories extends Component {\r\n    //constructor(props: IProps) {\r\n    //    super(props);\r\n    //}\r\n    handleCategorySearch = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchcategory,\r\n            searchcategory: event.target.id,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"categories\">\r\n                <h3>Categories</h3>\r\n                <ul>\r\n                    <li><Link to=\"/\" id=\"antiques & collectors\" onClick={this.handleCategorySearch} >antiques & collectors</Link></li>\r\n                    <li><Link to=\"/\" id=\"car, motorcycle & accessories\" onClick={this.handleCategorySearch} >car, motorcycle & accessories</Link></li>\r\n                    <li><Link to=\"/\" id=\"baby & kids\" onClick={this.handleCategorySearch} >baby & kids</Link></li>\r\n                    <li><Link to=\"/\" id=\"beauty & wellness\" onClick={this.handleCategorySearch} >beauty & wellness</Link></li>\r\n                    <li><Link to=\"/\" id=\"books, movies & music\" onClick={this.handleCategorySearch} >books, movies & music</Link></li>\r\n                    <li><Link to=\"/\" id=\"electronics & computer\" onClick={this.handleCategorySearch} >electronics & computer</Link></li>\r\n                    <li><Link to=\"/\" id=\"mobile phone & equipment\" onClick={this.handleCategorySearch} >mobile phone & equipment</Link></li>\r\n                    <li><Link to=\"/\" id=\"pet needs\" onClick={this.handleCategorySearch} >pet needs</Link></li>\r\n                    <li><Link to=\"/\" id=\"hobby & leisure\" onClick={this.handleCategorySearch} >hobby & leisure</Link></li>\r\n                    <li><Link to=\"/\" id=\"property\" onClick={this.handleCategorySearch} >property</Link></li>\r\n                    <li><Link to=\"/\" id=\"jobs & services\" onClick={this.handleCategorySearch} >jobs & services</Link></li>\r\n                    <li><Link to=\"/\" id=\"clothes & fashion\" onClick={this.handleCategorySearch}>clothes & fashion</Link></li>\r\n                    <li><Link to=\"/\" id=\"furniture, housing & household\" onClick={this.handleCategorySearch} >furniture, housing & household</Link></li>\r\n                    <li><Link to=\"/\" id=\"jewelry & accessories\" onClick={this.handleCategorySearch} >jewelry & accessories</Link></li>\r\n                    <li><Link to=\"/\" id=\"games & consoles\" onClick={this.handleCategorySearch} >games & consoles</Link></li>\r\n                    <li><Link to=\"/\" id=\"sports, travel & outdoor\" onClick={this.handleCategorySearch} >sports, travel & outdoor</Link></li>\r\n                    <li><Link to=\"/\" id=\"tickets & events\" onClick={this.handleCategorySearch} >tickets & events</Link></li>\r\n                    <li><Link to=\"/\" id=\"moving & help\" onClick={this.handleCategorySearch} >moving & help</Link></li>\r\n                    <li><Link to=\"/\" id=\"tools\" onClick={this.handleCategorySearch} >tools</Link></li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState';\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\nexport interface ISearchAction extends IAction {\r\n    searchcategory: string;\r\n}\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n\r\n    newState.BM.user = { lastname: \"\", firstname: \"\", username: \"\", password: \"\", email: \"\" };\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_searchcategory] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    newState.UI.searchbar = \"\";\r\n    return newState;\r\n}    \r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n            return (\r\n                <div className=\"wholeLogout\">\r\n                    <p>Welcome, {window.CS.getBMState().user.username} !</p>\r\n                    <h4>contact informations:</h4>\r\n                    <p>Firstname: {window.CS.getBMState().user.firstname}</p>\r\n                    <p>Lastname: {window.CS.getBMState().user.lastname}</p>\r\n                    <button onClick={this.handleLogout}>Logout</button>\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n                <div className=\"loginFormDiv\">\r\n                    <form className=\"loginFormMain\" onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                        <br />\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                        <br />\r\n                        <input type=\"submit\" value=\"Login\" />\r\n                    </form>\r\n                    <p>{window.CS.getUIState().Login.errorMessage}</p>\r\n\r\n                </div>\r\n            )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    const action: ISearchAction = {\r\n                        type: ActionType.update_searchcategory,\r\n                        searchcategory: \"\",\r\n                    }\r\n                    window.CS.clientAction(action);\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/showadvertises\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called,\r\n        }\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchcategory,\r\n            searchcategory: \"\",\r\n        }\r\n        window.CS.clientAction(action);\r\n        window.CS.clientAction(uiAction);\r\n        axios.get('/auth/logout').then(res => {\r\n            const loggedoutAction: IAction = {\r\n                type: ActionType.user_logged_out\r\n            }\r\n            window.CS.clientAction(loggedoutAction);\r\n        }\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nreducerFunctions[ActionType.register_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Register.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    newState.BM.user = updateAction.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.loggedIn = true;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"registerFormDiv\" >\r\n                <form className=\"registerFormMain\" onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"firstname\">First name:</label>\r\n                    <input type=\"firstname\" placeholder=\"firstname\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} />\r\n                    <br />\r\n                    <label htmlFor=\"lastname\">Last name:</label>\r\n                    <input type=\"lastname\" placeholder=\"lastname\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} />\r\n                    <br />\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"email\" placeholder=\"yourname@mail.com\" onChange={this.handleEmailChange} value={window.CS.getBMState().user.email} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Register as new User\" />\r\n                </form>\r\n                <p>{window.CS.getUIState().Register.errorMessage}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEmailChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.email = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.register_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const uiAction: IAction = {\r\n                        type: ActionType.user_created\r\n                    }\r\n                    history.push('/');\r\n                    window.CS.clientAction(uiAction);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { IAdvertiseAction } from \"./ShowAllAdvertises\";\r\nimport { ActionType, IAction } from \"../framework/IAction\";\r\nimport { IAdvertiseData, IState, ICommentData } from \"../state/appState\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\nimport history from '../framework/history';\r\nimport { IWindow } from \"../framework/IWindow\";\r\nimport { reducerFunctions } from \"../reducer/appReducer\";\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single asset to the browser window\r\n//it also contains the logic to change asset properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n  edit: boolean;\r\n  advertise: IAdvertiseData;\r\n  comment: ICommentData;\r\n}\r\n\r\ninterface IJSXState {\r\n  edit_mode: boolean;\r\n  comment: {\r\n    comment_user: string,\r\n    comment_text: string\r\n  }\r\n}\r\n\r\nexport interface IComment extends IAction {\r\n  comment: ICommentData\r\n}\r\n\r\nreducerFunctions[ActionType.advertise_updated] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n  newState.UI.waitingForResponse = false;\r\n};\r\n\r\nreducerFunctions[ActionType.update_advertise] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n  let advertiseToChange: IAdvertiseData[] = newState.BM.advertises.filter(advertise => advertise._id === updateAction.advertise._id);\r\n  advertiseToChange[0].advertise_title = updateAction.advertise.advertise_title;\r\n  advertiseToChange[0].advertise_type = updateAction.advertise.advertise_type;\r\n  advertiseToChange[0].advertise_description = updateAction.advertise.advertise_description;\r\n  advertiseToChange[0].advertise_category = updateAction.advertise.advertise_category;\r\n  advertiseToChange[0].advertise_price = updateAction.advertise.advertise_price;\r\n  advertiseToChange[0].advertise_pictureUrl = updateAction.advertise.advertise_pictureUrl;\r\n  advertiseToChange[0].advertise_owner = updateAction.advertise.advertise_owner;\r\n  //advertiseToChange[0].advertise_comment = updateAction.advertise.advertise_comment;\r\n  advertiseToChange[0].advertise_counter = updateAction.advertise.advertise_counter;\r\n  advertiseToChange[0].advertise_status = updateAction.advertise.advertise_status;\r\n  advertiseToChange[0].advertise_message = updateAction.advertise.advertise_message;\r\n  advertiseToChange[0].advertise_city = updateAction.advertise.advertise_city;\r\n  return newState;\r\n};\r\n\r\nreducerFunctions[ActionType.delete_advertise] = function (newState: IState, deleteAction: IAdvertiseAction) {\r\n  let advertisesToKeep: IAdvertiseData[] = newState.BM.advertises.filter(\r\n    advertise => advertise._id !== deleteAction.advertise._id\r\n  );\r\n  newState.BM.advertises = advertisesToKeep;\r\n  return newState;\r\n};\r\n\r\nexport default class SingleAdvertise extends React.PureComponent<IProps, IJSXState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      edit_mode: props.edit,\r\n      comment: {\r\n        comment_user: \"\",\r\n        comment_text: \"\"\r\n      }\r\n    };\r\n    console.log(\"state\",window.CS.getBMState().comments);\r\n  }\r\n  \r\n  handleSwitchToEditMode = () => {\r\n    this.setState({ edit_mode: true });\r\n  };\r\n  handleTitleChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_title = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleTypeChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_type = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleDescriptionChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_description = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleCategoryChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_category = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handlePriceChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_price = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handlePictureUrlChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_pictureUrl = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleStatusChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_status = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleCityChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_city = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleSave = (event: any) => {\r\n    this.setState({ edit_mode: false });\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    };\r\n    window.CS.clientAction(uiAction);\r\n    axios\r\n      .put(\r\n        \"/advertises/update/\" + this.props.advertise._id,\r\n        this.props.advertise\r\n      )\r\n      .then(res => {\r\n        const uiAction: IAction = {\r\n          type: ActionType.advertise_updated\r\n        };\r\n        window.CS.clientAction(uiAction);\r\n      });\r\n  };\r\n  handleDelete = () => {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    };\r\n    window.CS.clientAction(uiAction);\r\n    axios.post(\"/advertises/delete/\" + this.props.advertise._id).then(res => {\r\n      const action: IAdvertiseAction = {\r\n        type: ActionType.delete_advertise,\r\n        advertise: this.props.advertise\r\n      };\r\n      window.CS.clientAction(action);\r\n    });\r\n  };\r\n\r\n  handleCommentUser = (event: any) => {\r\n    let comment = {\r\n      comment_advertise: window.CS.getBMState().advertises[0]._id,\r\n      comment_text: event.target.value,\r\n      comment_user: window.CS.getBMState().user.username\r\n    };\r\n    this.setState({\r\n      comment: comment\r\n    })\r\n  }\r\n  handleCommentDescription = (event: any) => {\r\n    let comment = {\r\n      comment_advertise: window.CS.getBMState().advertises[0]._id,\r\n      comment_text: event.target.value,\r\n      comment_user: window.CS.getBMState().user.username\r\n    };\r\n    this.setState({\r\n      comment: comment\r\n    })\r\n  }\r\n\r\n  handleCreateComment = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"handleCreateComment invoked\");\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.post('/advertises/comment/add', this.state.comment)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        history.push(\"/\");\r\n        this.setState({\r\n          comment: {\r\n            comment_user: \"\",\r\n            comment_text: \"\"\r\n          }\r\n        })\r\n      });\r\n  }\r\n\r\n  \r\n  render() {\r\n    let locationProp = this.props as any;\r\n    //if the component is in edit mode, it will render different than if it just shows the data\r\n    if (\r\n      this.state.edit_mode && locationProp.location.pathname === \"/showadvertises\"\r\n    )\r\n      return (\r\n        <div className=\"wholeProduct\">\r\n          <ul className=\"ulProduct\">\r\n            <li className=\"titleName\">Title: <br></br>{\" \"}<input size={50} type=\"text\" name=\"title\" value={this.props.advertise.advertise_title} onChange={this.handleTitleChange} />\r\n            </li>\r\n            <li>PictureUrl: <br></br>{\" \"}<input size={50} type=\"text\" name=\"pictureUrl\" value={this.props.advertise.advertise_pictureUrl} onChange={this.handlePictureUrlChange} />\r\n            </li>\r\n            <li className=\"price\">Price: <br></br>{\" \"}<input size={50} type=\"text\" name=\"price\" value={this.props.advertise.advertise_price} onChange={this.handlePriceChange} />\r\n            </li>\r\n            <li className=\"description\">\r\n              <label htmlFor=\"description\">Description: <br></br>{\" \"}</label><textarea rows={5} cols={52} maxLength={300} name=\"description\" value={this.props.advertise.advertise_description} onChange={this.handleDescriptionChange}></textarea>\r\n            </li>\r\n            {/*<li className=\"owner\">Owner: <br></br> {this.props.advertise.advertise_owner}</li>*/}\r\n            <li className=\"city\">City: <br></br>{\" \"}<input size={50} type=\"text\" name=\"city\" value={this.props.advertise.advertise_city} onChange={this.handleCityChange} />\r\n            </li>\r\n            <li className=\"type\">\r\n              <label htmlFor=\"type\">Choose a Type: <br></br>{\" \"}</label><input type=\"radio\" name=\"type\" value=\"offer\" checked={this.props.advertise.advertise_type === \"offer\"} onClick={this.handleTypeChange} />{\" \"}\r\n              <span className=\"offerOrange\">offer</span>\r\n              <input type=\"radio\" name=\"type\" value=\"search\" checked={this.props.advertise.advertise_type === \"search\"} onClick={this.handleTypeChange} />{\" \"}\r\n              <span className=\"searchBlue\">search</span>\r\n            </li>\r\n            <li className=\"status\">\r\n              <label htmlFor=\"status\">Choose a Status: <br></br>{\" \"}</label>\r\n              <input type=\"radio\" name=\"status\" value=\"available\" checked={this.props.advertise.advertise_status === \"available\"} onClick={this.handleStatusChange} />{\" \"}\r\n              <span className=\"availableGreen\">available</span>\r\n              <input type=\"radio\" name=\"status\" value=\"sold\" checked={this.props.advertise.advertise_status === \"sold\"} onClick={this.handleStatusChange} />{\" \"}\r\n              <span className=\"soldRed\">sold</span>\r\n            </li>\r\n            {/*<li className=\"comment\">Comment: <br></br> {this.props.advertise.advertise_comment}</li>*/}\r\n            {/*<li className=\"message\">Message: <br></br> {this.props.advertise.advertise_message}</li>*/}\r\n            <li className=\"category\">Category: <br></br>{\" \"}<select className=\"selectBox\" name=\"category\" value={this.props.advertise.advertise_category} onChange={this.handleCategoryChange}>\r\n              <option value=\"---\">---</option>\r\n              <option value=\"antiques & collectors\">antiques & collectors</option>\r\n              <option value=\"car, motorcycle & accessories\">car, motorcycle & accessories</option>\r\n              <option value=\"baby & kids\">baby & kids</option>\r\n              <option value=\"beauty & wellness\">beauty & wellness</option>\r\n              <option value=\"books, movies & music\">books, movies & music</option>\r\n              <option value=\"electronics & computer\">electronics & computer</option>\r\n              <option value=\"mobile phone & equipment\">mobile phone & equipment</option>\r\n              <option value=\"pet needs\">pet needs</option>\r\n              <option value=\"hobby & leisure\">hobby & leisure</option>\r\n              <option value=\"property\">property</option>\r\n              <option value=\"jobs & services\">jobs & services</option>\r\n              <option value=\"clothes & fashion\">clothes & fashion</option>\r\n              <option value=\"furniture, housing & household\">furniture, housing & household</option>\r\n              <option value=\"jewelry & accessories\">jewelry & accessories</option>\r\n              <option value=\"games & consoles\">games & consoles</option>\r\n              <option value=\"sports, travel & outdoor\">sports, travel & outdoor</option>\r\n              <option value=\"tickets & events\">tickets & events</option>\r\n              <option value=\"moving & help\">moving & help</option>\r\n              <option value=\"tools\">tools</option>\r\n            </select>\r\n            </li>\r\n            {/*<li className=\"counter\">Counter: <br></br> {this.props.advertise.advertise_counter}</li>*/}\r\n            <li className=\"buttonsArea\">\r\n              <button className=\"saveButtonInEditMode\" onClick={this.handleSave} id={this.props.advertise._id}>save</button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    else if (\r\n      window.CS.getUIState().loggedIn && locationProp.location.pathname === \"/showadvertises\"\r\n    ) {\r\n      return (\r\n        <div className=\"wholeProduct\">\r\n          <ul className=\"ulProduct\">\r\n            <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n            <li><img className=\"picture\" src={this.props.advertise.advertise_pictureUrl} alt=\"no pic available\" /></li>\r\n            <li className=\"price\"><span className=\"priceName\">Price:</span> <br></br>{\" \"}{this.props.advertise.advertise_price}</li>\r\n            <li className=\"description\"><span className=\"descriptionName\">Description:</span> <br></br>{\" \"}{this.props.advertise.advertise_description}</li>\r\n            <li className=\"owner\"><span className=\"ownerName\">Owner:</span> <br></br>{\" \"}{this.props.advertise.advertise_owner}</li>\r\n            <li className=\"city\"><span className=\"cityName\">City:</span> <br></br>{\" \"}{this.props.advertise.advertise_city}</li>\r\n            <li className=\"type\"><span className=\"typeName\">Type:</span> <br></br>{\" \"}{this.props.advertise.advertise_type}</li>\r\n            <li className=\"status\"><span className=\"statusName\">Status:</span> <br></br>{\" \"}{this.props.advertise.advertise_status}{\" \"}</li>\r\n            <li className=\"comment\"><span className=\"commentName\">Comment:</span> <br></br>{\" \"}{this.props.advertise.advertise_comment}</li>\r\n            <li className=\"category\"><span className=\"categoryName\">Category:</span> <br></br>{\" \"}{this.props.advertise.advertise_category}</li>\r\n            <li className=\"buttonsArea\">\r\n              <button className=\"editButton\" onClick={this.handleSwitchToEditMode}>edit</button>\r\n              <button className=\"deleteButton\" onClick={this.handleDelete} id={this.props.advertise._id}>delete it</button>\r\n              {/*<button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>*/}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else if (window.CS.getUIState().loggedIn) {\r\n      return ( \r\n        <div className=\"wholeProduct\">\r\n          <ul className=\"ulProduct\">\r\n            <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n            <li><img className=\"picture\" src={this.props.advertise.advertise_pictureUrl} alt=\"no pic available\" /></li>\r\n            <li className=\"price\"><span className=\"priceName\">Price:</span> <br></br>{\" \"}{this.props.advertise.advertise_price}</li>\r\n            <li className=\"description\"><span className=\"descriptionName\">Description:</span> <br></br>{\" \"}{this.props.advertise.advertise_description}</li>\r\n            <li className=\"owner\"><span className=\"ownerName\">Owner:</span> <br></br>{\" \"}{this.props.advertise.advertise_owner}</li>\r\n            <li className=\"city\"><span className=\"cityName\">City:</span> <br></br>{\" \"}{this.props.advertise.advertise_city}</li>\r\n            <li className=\"type\"><span className=\"typeName\">Type:</span> <br></br>{\" \"}{this.props.advertise.advertise_type}</li>\r\n            <li className=\"status\"><span className=\"statusName\">Status:</span> <br></br>{\" \"}{this.props.advertise.advertise_status}</li>\r\n            <li className=\"comment\"><span className=\"commentName\">Comment:</span> <br></br>{\" \"}{this.props.advertise.advertise_comment}</li>\r\n            <li className=\"category\"><span className=\"categoryName\">Category:</span> <br></br>{\" \"}{this.props.advertise.advertise_category}</li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <div>\r\n                <form className=\"commentField\" onSubmit={this.handleCreateComment}>\r\n                  <label htmlFor=\"commentUser\">Username:</label>\r\n                  <input type=\"text\" value={window.CS.getBMState().user.username} disabled />\r\n                  <br />\r\n                  <label htmlFor=\"commentText\">Comment:</label>\r\n                  <textarea rows={6} cols={52} maxLength={400} name=\"description\" onChange={this.handleCommentDescription} value={this.state.comment.comment_text}></textarea>\r\n                  <br />\r\n                  <button className=\"commentButton\" type=\"submit\" >Add Comment</button>\r\n                </form>\r\n                <p>{window.CS.getUIState().Register.errorMessage}</p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else { \r\n      return (\r\n        <div className=\"wholeProduct\">\r\n          <ul className=\"ulProduct\">\r\n            <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n            <li><img className=\"picture\" src={this.props.advertise.advertise_pictureUrl} alt=\"no pic available\" /></li>\r\n            <li className=\"price\"><span className=\"priceName\">Price:</span> <br></br>{\" \"}{this.props.advertise.advertise_price}</li>\r\n            <li className=\"description\"><span className=\"descriptionName\">Description:</span> <br></br>{\" \"}{this.props.advertise.advertise_description}</li>\r\n            <li className=\"owner\"><span className=\"ownerName\">Owner:</span> <br></br>{\" \"}{this.props.advertise.advertise_owner}</li>\r\n            <li className=\"city\"><span className=\"cityName\">City:</span> <br></br>{\" \"}{this.props.advertise.advertise_city}</li>\r\n            <li className=\"type\"><span className=\"typeName\">Type:</span> <br></br>{\" \"}{this.props.advertise.advertise_type}</li>\r\n            <li className=\"status\"><span className=\"statusName\">Status:</span> <br></br>{\" \"}{this.props.advertise.advertise_status}</li>\r\n            <li className=\"comment\"><span className=\"commentName\">Comment:</span> <br></br>{\" \"}{this.props.advertise.advertise_comment}</li>\r\n            <li className=\"category\"><span className=\"categoryName\">Category:</span> <br></br>{\" \"}{this.props.advertise.advertise_category}</li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport SingleAdvertise from './SingleAdvertise'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport { IAdvertiseData, IState, ICommentData } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport '../App.css';\r\nimport { IWindow } from '../framework/IWindow'\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  user?: boolean;\r\n  comment: ICommentData;\r\n};\r\ninterface IJSXState { };\r\nexport interface IAdvertiseAction extends IAction {\r\n  advertise: IAdvertiseData\r\n}\r\nreducerFunctions[ActionType.create_advertise] = function (newState: IState, action: IAdvertiseAction) {\r\n  newState.BM.advertises.unshift(action.advertise);\r\n  newState.UI.waitingForResponse = false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowAllAdvertises extends Component<IProps, IJSXState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.handleCreateAdvertise = this.handleCreateAdvertise.bind(this);\r\n  }\r\n  render() {\r\n    let locationProp = this.props as any;\r\n    // sort from new to old\r\n    window.CS.getBMState().advertises && // if advertises are available ...\r\n    window.CS.getBMState().advertises.sort((a: any,b : any) => Date.parse(b.created_at) - Date.parse(a.created_at));\r\n    \r\n    //render for categories\r\n    const renderCategories = window.CS.getBMState().advertises.filter((item: any) => item.advertise_category === window.CS.getUIState().searchcategory);\r\n    \r\n    //render for searchbar)\r\n    let searchStr = window.CS.getUIState().searchbar.toLowerCase();\r\n    let renderSearchbar = [];\r\n    for (let i = 0; i < window.CS.getBMState().advertises.length; i++) {\r\n        if (window.CS.getBMState().advertises[i].advertise_title.toLowerCase().indexOf(searchStr) !== -1) {\r\n          renderSearchbar.push(window.CS.getBMState().advertises[i]);\r\n        }\r\n    }\r\n    //render for own advertises\r\n    const renderOwnAdds = locationProp.location.pathname === \"/showadvertises\"\r\n      ?\r\n      window.CS.getBMState().advertises.filter((item: any) => item.advertise_owner === window.CS.getBMState().user.username)\r\n      :\r\n      window.CS.getBMState().advertises;\r\n    //\r\n\r\n    if (window.CS.getUIState().loggedIn) { //if user is logged in ...\r\n      if (window.CS.getUIState().searchcategory === \"\" && window.CS.getUIState().searchbar === \"\") { // ...and no category and search is selected\r\n        return (\r\n          <div>\r\n            {\r\n              locationProp.location.pathname === \"/showadvertises\" &&\r\n              <>\r\n                <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n                <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n                <button className=\"createAdvertiseButton\" onClick={this.handleCreateAdvertise}>create advertise</button>\r\n                </p>\r\n              </>\r\n            } {/* ==> show all advertises from logged-in-user */}\r\n            <div className=\"render_showadvertises\">\r\n              {renderOwnAdds.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (window.CS.getUIState().searchbar === \"\") {\r\n        /* category is selected, no searchbar */ \r\n        return (\r\n          <div>\r\n            {\r\n              locationProp.location.pathname === \"/showadvertises\" &&\r\n              <>\r\n                <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n                <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n              <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n                </p>\r\n              </>\r\n            }\r\n            <h3 className=\"categoryTitle\">{window.CS.getUIState().searchcategory}</h3>\r\n            <div className=\"render_showadvertises\"> {/* ==> show all adds from selected category */}\r\n              {renderCategories.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        /* category is selected but also searchbar */\r\n        return (\r\n        <div>\r\n          {\r\n            locationProp.location.pathname === \"/showadvertises\" &&\r\n            <>\r\n              <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n              <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n        <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n              </p>\r\n            </>\r\n          }\r\n          <h3 className=\"categoryTitle\">your search: {window.CS.getUIState().searchbar}</h3>\r\n          <div className=\"render_showadvertises\"> {/* ==> show all adds from search */}\r\n            {renderSearchbar.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      /* no user ...*/ \r\n      if (window.CS.getUIState().searchcategory === \"\" && window.CS.getUIState().searchbar === \"\") {\r\n        /* ... and no category and searchbar is selected  */\r\n        return (\r\n          <div>\r\n            <h3 className=\"categoryTitle\">All advertises ordered by date</h3>\r\n            <div className=\"render_showadvertises\"> {/* ==> show all advertises */}\r\n              {window.CS.getBMState().advertises.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (window.CS.getUIState().searchbar === \"\") {\r\n        /* category is selected but no search*/ \r\n        return (\r\n          <div>\r\n            <h3 className=\"categoryTitle\">{window.CS.getUIState().searchcategory}</h3>\r\n            <div className=\"render_showadvertises\"> {/* ==> show all adds from selected category */}\r\n              {renderCategories.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n        <div>\r\n          <h3 className=\"categoryTitle\">your search: {window.CS.getUIState().searchbar}</h3>\r\n          <div className=\"render_showadvertises\"> {/* ==> show all adds from search */}\r\n            {renderSearchbar.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  handleCreateAdvertise() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    const newAdvertise: IAdvertiseData = {\r\n      _id: mongoose.Types.ObjectId().toString(),\r\n      advertise_title: \"\",\r\n      advertise_type: \"offer\",\r\n      advertise_description: \"\",\r\n      advertise_category: \"---\",\r\n      advertise_price: \"\",\r\n      advertise_owner: window.CS.getBMState().user.username.toString(),\r\n      advertise_pictureUrl: \"https://res.cloudinary.com/benb-board/image/upload/v1572432933/benb-board/sale_buijkf.jpg\",\r\n      advertise_counter: 0,\r\n      advertise_status: \"available\",\r\n      advertise_city: \"\",\r\n    }\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.create_advertise,\r\n      advertise: newAdvertise\r\n    }\r\n    axios.post('/advertises/add', newAdvertise)\r\n      .then(res => {\r\n        window.CS.clientAction(action);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Categories from './components/Categories';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ShowAllAdvertises from './components/ShowAllAdvertises';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { IAdvertiseData, IState, ICommentData } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\nimport './App.css';\r\n\r\nimport { IWindow } from './framework/IWindow'\r\n\r\nconst copyrightImg = require('./images/C.jpg')\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface IAdvertisesLoadedAction extends IAction {\r\n  advertises: IAdvertiseData[];\r\n  comments: ICommentData[];\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_advertises_from_server] = function (newState: IState, action: IAdvertisesLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.advertises = action.advertises;\r\n  newState.BM.comments = action.comments;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps> {\r\n\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/advertises/read').then(response => {\r\n      console.log(\"resp:\",response.data);\r\n      const responseAction: IAdvertisesLoadedAction = {\r\n        type: ActionType.add_advertises_from_server,\r\n        advertises: response.data[0] as IAdvertiseData[],\r\n        comments: response.data[1] as ICommentData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    if (window.CS.getUIState().loggedIn) {\r\n    return (\r\n      <div className=\"container-body\">\r\n        <NavBar /> {/* oben  */}\r\n        <div className=\"container-main-content\"> {/* mitte */}\r\n          <div className=\"container-categories\">\r\n            <Categories />\r\n          </div> {/* mitte links */}\r\n          <Switch>\r\n            <Route path=\"/showadvertises\" user={window.CS.getUIState().loggedIn} component={ShowAllAdvertises} />\r\n            <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n            <Route exact={true} path=\"/\" advertise={window.CS.getUIState().searchcategory} component={ShowAllAdvertises} />\r\n          </Switch>\r\n          <div className=\"container-userdetails\">\r\n          <Login />\r\n          </div> {/* mitte rechts */}\r\n        </div>\r\n        <div className=\"footer\"> {/* unten */}\r\n          <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n          </div>\r\n      </div>\r\n    )} else {\r\n      return (\r\n        <div className=\"container-body\">\r\n          <NavBar /> {/* oben  */}\r\n          <div className=\"container-main-content\"> {/* mitte */}\r\n            <div className=\"container-categories\">\r\n              <Categories />\r\n            </div> {/* mitte links */}\r\n            <Switch>\r\n              <Route path=\"/showadvertises\" component={ShowAllAdvertises} />\r\n              <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n              <Route exact={true} path=\"/\" advertise={window.CS.getUIState().searchcategory} component={ShowAllAdvertises} />\r\n            </Switch>\r\n            <div className=\"container-userdetails\">\r\n            <Route path=\"/login\" component={Login} />\r\n            </div> {/* mitte rechts */}\r\n          </div>\r\n          <div className=\"footer\"> {/* unten */}\r\n            <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n            </div>\r\n        </div>\r\n      )}\r\n    ;\r\n  }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n        console.log(message);\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        console.log(\"test server reached\")\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"https://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State\r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}