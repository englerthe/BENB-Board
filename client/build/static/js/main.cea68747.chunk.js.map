{"version":3,"sources":["images/benb-logo.jpg","images/C.jpg","framework/IAction.ts","components/NavBar.tsx","components/Categories.tsx","components/Userdetails.tsx","state/appState.ts","reducer/appReducer.ts","framework/history.ts","components/Login.tsx","components/Register.tsx","components/SingleAdvertise.tsx","components/ShowAllAdvertises.tsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["module","exports","ActionType","logoName","require","nav","props","id","src","alt","to","className","action","method","type","name","placeholder","exact","Categories","Userdetails","initial","UI","counter","loggedIn","waitingForResponse","Login","errorMessage","BM","user","firstname","lastname","username","password","email","advertises","reducerFunctions","reducer","state","window","CS","log","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","createBrowserHistory","login_error","user_logged_in","user_logged_out","getUIState","getBMState","onClick","this","handleLogout","onSubmit","handleSubmit","htmlFor","onChange","handleUsernameChange","value","handlePasswordChange","event","target","update_user","clientAction","preventDefault","uiAction","server_called","axios","post","then","res","data","console","loggedinAction","history","push","get","loggedoutAction","Component","updateAction","user_created","Register","handleFirstnameChange","handleLastnameChange","advertise_updated","update_advertise","advertiseToChange","filter","advertise","_id","advertise_type","advertise_description","advertise_category","advertise_price","advertise_pictureUrl","advertise_owner","advertise_comment","advertise_counter","advertise_status","advertise_message","advertise_city","delete_advertise","deleteAction","advertisesToKeep","SingleAdvertise","handleSwitchToEditMode","bind","handleNameChange","handleValueChange","handleSave","handleRerenderTest","handleDelete","edit_mode","edit","setState","newAdvertise","put","render_test","React","PureComponent","create_advertise","ShowAllAdvertises","handleCreateAdvertise","toString","map","key","mongoose","Types","ObjectId","copyrightImg","add_advertises_from_server","App","response","responseAction","catch","error","NavBar","path","component","Boolean","location","hostname","match","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","message","getState","createStore","dispatch","initializeStore","ReactDOM","render","stateCounter","document","getElementById","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cea68747.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/benb-logo.c771846f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/C.887f96e7.jpg\";","export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_advertise = \"create_advertise\",\r\n    update_advertise = \"update_advertise\",\r\n    delete_advertise = \"delete_advertise\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    advertise_updated = \"advertise_updated\",\r\n    add_advertises_from_server = \"add_advertises_from_server\" \r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst logoName = require('../images/benb-logo.jpg')\r\n\r\n\r\nconst nav = (props: any) => {\r\n    return (\r\n        <nav>\r\n            <div id=\"showlogo\">\r\n                <img src={logoName} alt=\"BENB-Board\"/>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    <li></li>\r\n                    <li><NavLink to=\"/\">Home</NavLink></li>\r\n                    <div className=\"nav-search\">\r\n                        <form action=\"/search-advertisements\" method=\"get\">\r\n                            <input type=\"text\" name=\"title\" placeholder=\"Search an advertisement by title\" />\r\n                                <button type=\"submit\">Search advertisement by title</button>\r\n                        </form>\r\n                    </div>\r\n                    <li><NavLink exact={true} to=\"/\">Login</NavLink></li>\r\n                    <li><NavLink to=\"/register\">Register</NavLink></li>\r\n                    <li><NavLink to=\"/showadvertises\">Advertises</NavLink></li>\r\n            </ul>\r\n            </div>\r\n        </nav>\r\n            )\r\n        }\r\nexport default nav;","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Categories = (props: any) => {\r\n    return (\r\n        <div className=\"categories\">\r\n            <h2>Categories</h2>\r\n            <ul>\r\n\r\n                <li><NavLink to=\"/\">Cell Phones & Accessoires</NavLink></li>\r\n                <li><NavLink to=\"/\">Electronic, Computers & Accessoires</NavLink></li>\r\n                <li><NavLink to=\"/\">Motors</NavLink></li>\r\n                <li><NavLink to=\"/\">Home & Garden</NavLink></li>\r\n                <li><NavLink to=\"/\">Baby</NavLink></li>\r\n                <li><NavLink to=\"/\">Clothing, Shoes & Accessoires</NavLink></li>\r\n                <li><NavLink to=\"/\">Books</NavLink></li>\r\n                <li><NavLink to=\"/\">Music & Movies</NavLink></li>\r\n                <li><NavLink to=\"/\">Everything else</NavLink></li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Categories;","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Userdetails = (props: any) => {\r\n    return (\r\n        <div>\r\n            <ul>\r\n\r\n                <li>Userdetails</li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Userdetails;","export interface IUser {\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    password:string;\r\n    email: string;\r\n}\r\n\r\n\r\nexport interface ILogin{\r\n    errorMessage:string;\r\n}\r\n\r\n\r\nexport interface IUI {\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse: boolean;\r\n    Login: ILogin;\r\n}\r\n\r\nexport interface IAdvertiseData {\r\n    _id: string;\r\n    advertise_type: string;\r\n    advertise_category: [];\r\n    advertise_description: string;\r\n    advertise_price: string;\r\n    advertise_pictureUrl: string;\r\n    advertise_owner?: string;\r\n    advertise_comment?: string;\r\n    advertise_counter: number;\r\n    advertise_status: string;\r\n    advertise_message?: string;\r\n    advertise_city: string;\r\n  }\r\n\r\n\r\nexport interface IBM{\r\n    user:IUser;\r\n    advertises:IAdvertiseData[]\r\n}\r\n\r\n\r\nexport interface IState{\r\n    UI:IUI;\r\n    BM:IBM;\r\n}\r\n\r\n// initial state \r\nexport const initial:IState = {\r\n\tUI: {\r\n\t\tcounter: 0,\r\n\t\tloggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: {errorMessage:\"\"}\r\n    },\r\n\tBM: {\r\n        user:{\r\n            firstname:\"\",\r\n            lastname:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            email: \"\"\r\n        },\r\n        advertises:[]\r\n\t}\r\n};\r\n","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n    newState.BM.user = {lastname:\"\",firstname:\"\",username:\"\",password:\"\",email:\"\"};\r\n    return newState\r\n}\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n        return (\r\n            <div>\r\n                <p>You are logged in as {window.CS.getBMState().user.username}</p>\r\n                <button onClick={this.handleLogout}>Logout</button>\r\n            </div>\r\n        )\r\n    else\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Login\" />\r\n                </form>\r\n                <p>{window.CS.getUIState().Login.errorMessage}</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/showadvertises\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.get('/auth/logout').then(res => {\r\n            const loggedoutAction: IAction = {\r\n                type: ActionType.user_logged_out\r\n            }\r\n            window.CS.clientAction(loggedoutAction);\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.BM.user = updateAction.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.loggedIn = true ;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"firstname\">First name:</label>\r\n                    <input type=\"text\" placeholder=\"firstname\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} />\r\n                    <br />\r\n                    <label htmlFor=\"lastname\">Last name:</label>\r\n                    <input type=\"text\" placeholder=\"lastname\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} />\r\n                    <br />\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Register as new User\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const uiAction: IAction = {\r\n                    type: ActionType.user_created\r\n                }\r\n                history.push('/');\r\n                window.CS.clientAction(uiAction);\r\n\r\n                console.log(res.data)\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { IAdvertiseAction } from './ShowAllAdvertises';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IAdvertiseData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\n\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single asset to the browser window\r\n//it also contains the logic to change asset properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n    edit: boolean;\r\n    advertise: IAdvertiseData;\r\n}\r\n\r\ninterface IJSXState {\r\n    edit_mode: boolean;\r\n}\r\n\r\nreducerFunctions[ActionType.advertise_updated] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n    newState.UI.waitingForResponse=false;\r\n}\r\nreducerFunctions[ActionType.update_advertise] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n    let advertiseToChange: IAdvertiseData[] = newState.BM.advertises.filter(advertise => advertise._id === updateAction.advertise._id)\r\n    console.log(advertiseToChange);\r\n    advertiseToChange[0].advertise_type = updateAction.advertise.advertise_type;\r\n    advertiseToChange[0].advertise_description = updateAction.advertise.advertise_description;\r\n    advertiseToChange[0].advertise_category = updateAction.advertise.advertise_category;\r\n    advertiseToChange[0].advertise_price = updateAction.advertise.advertise_price;\r\n    advertiseToChange[0].advertise_pictureUrl = updateAction.advertise.advertise_pictureUrl;\r\n    advertiseToChange[0].advertise_owner = updateAction.advertise.advertise_owner;\r\n    advertiseToChange[0].advertise_comment = updateAction.advertise.advertise_comment;\r\n    advertiseToChange[0].advertise_counter = updateAction.advertise.advertise_counter;\r\n    advertiseToChange[0].advertise_status = updateAction.advertise.advertise_status;\r\n    advertiseToChange[0].advertise_message = updateAction.advertise.advertise_message;\r\n    advertiseToChange[0].advertise_city = updateAction.advertise.advertise_city;\r\n    return newState;\r\n}\r\nreducerFunctions[ActionType.delete_advertise] = function (newState: IState, deleteAction: IAdvertiseAction) {\r\n    let advertisesToKeep: IAdvertiseData[] = newState.BM.advertises.filter(advertise => advertise._id !== deleteAction.advertise._id)\r\n    newState.BM.advertises = advertisesToKeep;\r\n    return newState;\r\n}\r\n\r\n\r\nexport default class SingleAdvertise extends React.PureComponent<IProps, IJSXState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.handleSwitchToEditMode = this.handleSwitchToEditMode.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleValueChange = this.handleValueChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleRerenderTest = this.handleRerenderTest.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n\r\n        this.state = {\r\n            edit_mode: props.edit,\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        //if the component is in edit mode, it will render different than if it just shows the data\r\n        if (this.state.edit_mode)\r\n            return (\r\n                <div>\r\n                <p>Type: <input type=\"text\" name=\"type\" value={this.props.advertise.advertise_type} onChange={this.handleNameChange} /></p>\r\n                <p>Description: <input type=\"text\" name=\"description\" value={this.props.advertise.advertise_description} onChange={this.handleNameChange} /></p>\r\n                <p>Category: <input type=\"text\" name=\"category\" value={this.props.advertise.advertise_category} onChange={this.handleNameChange} /></p>\r\n                <p>Price: <input type=\"text\" name=\"price\" value={this.props.advertise.advertise_price} onChange={this.handleNameChange} /></p>\r\n                <p>Picture: <input type=\"text\" name=\"pictureUrl\" value={this.props.advertise.advertise_pictureUrl} onChange={this.handleNameChange} /></p>\r\n                <p>Status: <input type=\"text\" name=\"status\" value={this.props.advertise.advertise_status} onChange={this.handleNameChange} /></p>\r\n                <p>City: <input type=\"text\" name=\"city\" value={this.props.advertise.advertise_city} onChange={this.handleNameChange} /></p>\r\n                <p>\r\n                <button onClick={this.handleSave} id={this.props.advertise._id}>save</button>\r\n                <button onClick={this.handleRerenderTest} >increase State Counter</button>\r\n                </p>\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n\r\n                <div>\r\n                    <p>Type: {this.props.advertise.advertise_type}</p>\r\n                    <p>Description: {this.props.advertise.advertise_description}</p>\r\n                    <p>Category: {this.props.advertise.advertise_category}</p>\r\n                    <p>Price: {this.props.advertise.advertise_price}</p>\r\n                    <p>Picture: {this.props.advertise.advertise_pictureUrl}</p>\r\n                    <p>Owner: {this.props.advertise.advertise_owner}</p>\r\n                    <p>Comment: {this.props.advertise.advertise_comment}</p>\r\n                    <p>Counter: {this.props.advertise.advertise_counter}</p>\r\n                    <p>Status: {this.props.advertise.advertise_status}</p>\r\n                    <p>Message: {this.props.advertise.advertise_message}</p>\r\n                    <p>City: {this.props.advertise.advertise_city}</p>\r\n                    <p>\r\n                        <button onClick={this.handleSwitchToEditMode}>edit</button>\r\n                        <button onClick={this.handleDelete} id={this.props.advertise._id}>sell or dispose</button>\r\n                        <button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>\r\n                    </p>\r\n                </div>\r\n            )\r\n    }\r\n    handleSwitchToEditMode() {\r\n        this.setState({ edit_mode: true });\r\n    }\r\n    handleNameChange(event: any) {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_type = event.target.value\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleValueChange(event: any) {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_description = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSave(event: any) {\r\n        this.setState({ edit_mode: false });\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n        axios.put('/advertises/update/' + this.props.advertise._id, this.props.advertise)\r\n        .then(res => {\r\n            const uiAction: IAction = {\r\n                type: ActionType.advertise_updated\r\n              }\r\n              window.CS.clientAction(uiAction);\r\n        });\r\n    }\r\n    handleDelete() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n          }\r\n          window.CS.clientAction(uiAction);\r\n          axios.post('/advertises/delete/' + this.props.advertise._id)\r\n          .then(res => {\r\n            const action: IAdvertiseAction = {\r\n                type: ActionType.delete_advertise,\r\n                advertise: this.props.advertise\r\n            }\r\n            window.CS.clientAction(action)\r\n          });\r\n    }\r\n    handleRerenderTest(event: any) {\r\n        const action: IAction = {\r\n            type: ActionType.render_test,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport SingleAdvertise from './SingleAdvertise'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport {IAdvertiseData,IState} from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\n\r\nimport { IWindow } from '../framework/IWindow'\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps{};\r\ninterface IJSXState { };\r\nexport interface IAdvertiseAction extends IAction {\r\n  advertise: IAdvertiseData\r\n}\r\nreducerFunctions[ActionType.create_advertise] = function (newState: IState, action: IAdvertiseAction) {\r\n  console.log(\"test\",newState.BM.advertises);\r\n  newState.BM.advertises.push(action.advertise);\r\n  newState.UI.waitingForResponse=false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowAllAdvertises extends Component<IProps, IJSXState> {\r\n    constructor(props: any) {\r\n        console.log(\"new App component will be initialized\");\r\n        console.log(window.CS.getBMState());\r\n        super(props);\r\n        this.handleCreateAdvertise = this.handleCreateAdvertise.bind(this);\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n          <p> {window.CS.getUIState().waitingForResponse.toString()}{window.CS.getUIState().counter}</p>\r\n          <h1>show all own advertises</h1>\r\n          <p>to create a new advertise click this button:&nbsp;\r\n            <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n          </p>\r\n          <div>\r\n          {window.CS.getBMState().advertises.map(advertise => <SingleAdvertise key={advertise._id} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n    handleCreateAdvertise() {\r\n        console.log(\"handleCreateAdvertise invoked\");\r\n        const uiAction: IAction = {\r\n          type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        const newAdvertise: IAdvertiseData = {\r\n          _id: mongoose.Types.ObjectId().toString(),\r\n          advertise_type:\"offer\",\r\n          advertise_description: \"\",\r\n          advertise_category: [],\r\n          advertise_price: \"\",\r\n          advertise_pictureUrl: \"\",\r\n          advertise_counter: 0,\r\n          advertise_status: \"available\",\r\n          advertise_city: \"\"\r\n        }\r\n        const action: IAdvertiseAction = {\r\n          type: ActionType.create_advertise,\r\n          advertise: newAdvertise\r\n        }\r\n        axios.post('/advertises/add', newAdvertise)\r\n        .then(res => {\r\n          window.CS.clientAction(action);\r\n          console.log('test:', res.data)\r\n        });\r\n      }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Categories from './components/Categories';\r\nimport Userdetails from './components/Userdetails';\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport Register from './components/Register';\r\nimport ShowAllAdvertises from './components/ShowAllAdvertises';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { IAdvertiseData, IState } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\nimport './App.css';\r\n\r\nimport { IWindow } from './framework/IWindow'\r\n\r\nconst copyrightImg = require('./images/C.jpg')\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface IAdvertisesLoadedAction extends IAction {\r\n  advertises: IAdvertiseData[]\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_advertises_from_server] = function (newState: IState, action: IAdvertisesLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.advertises = action.advertises;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps> {\r\n\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/advertises/read').then(response => {\r\n      console.log(\"this data was loaded as a result of componentDidMount:\");\r\n      console.log(response.data);\r\n      const responseAction: IAdvertisesLoadedAction = {\r\n        type: ActionType.add_advertises_from_server,\r\n        advertises: response.data as IAdvertiseData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    return (\r\n      <div className=\"container-body\">\r\n        <NavBar /> {/* oben  */}\r\n        <div className=\"container-main-content\"> {/* mitte */}\r\n          <div className=\"container-categories\"><Categories /></div> {/* mitte links */}\r\n          <Switch>\r\n            <Route path=\"/showadvertises\" component={ShowAllAdvertises} />\r\n            <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n          </Switch>\r\n          <div className=\"container-userdetails\">\r\n            <Route path=\"/\" component={Login} />\r\n            {/*<Route path=\"/login\" component={Login} />*/}\r\n            <Userdetails />\r\n          </div> {/* mitte rechts */}\r\n        </div>\r\n        <div className=\"footer\"> {/* unten */}\r\n          <img src={copyrightImg} alt=\"Copyright by BENB\"/>Copyright by BENB\r\n          </div> \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n        console.log(message);\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        console.log(\"test server reached\")\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"https://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State\r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}