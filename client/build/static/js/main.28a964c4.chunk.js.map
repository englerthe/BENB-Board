{"version":3,"sources":["images/benb-logo.jpg","images/C.jpg","framework/IAction.ts","state/appState.ts","reducer/appReducer.ts","components/NavBar.tsx","components/Categories.tsx","framework/history.ts","components/Login.tsx","components/Register.tsx","components/SingleAdvertise.tsx","components/ShowAllAdvertises.tsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["module","exports","ActionType","initial","UI","counter","loggedIn","waitingForResponse","Login","errorMessage","Register","searchbar","searchcategory","BM","user","firstname","lastname","username","password","email","advertises","comment","comment_user","comment_text","reducerFunctions","reducer","state","action","window","CS","log","type","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","require","clear_searchcategory","update_searchbar","nav","props","clearCategorySearch","event","clearSearch","clientAction","handleSearchbarChange","target","value","getUIState","className","to","onClick","this","name","placeholder","onChange","Component","update_searchcategory","Categories","handleCategorySearch","id","createBrowserHistory","login_error","user_logged_in","user_logged_out","getBMState","handleLogout","onSubmit","handleSubmit","htmlFor","handleUsernameChange","handlePasswordChange","update_user","preventDefault","uiAction","server_called","axios","post","then","res","data","loggedinAction","history","push","get","loggedoutAction","register_error","updateAction","user_created","handleFirstnameChange","handleLastnameChange","handleEmailChange","advertise_updated","update_advertise","advertiseToChange","filter","advertise","_id","advertise_title","advertise_type","advertise_description","advertise_category","advertise_price","advertise_pictureUrl","advertise_owner","advertise_comment","advertise_counter","advertise_status","advertise_message","advertise_city","delete_advertise","deleteAction","advertisesToKeep","SingleAdvertise","handleSwitchToEditMode","setState","edit_mode","handleTitleChange","newAdvertise","handleTypeChange","handleDescriptionChange","handleCategoryChange","handlePriceChange","handlePictureUrlChange","handleStatusChange","handleCityChange","handleSave","put","handleDelete","edit","locationProp","location","pathname","size","rows","cols","maxLength","checked","src","alt","React","PureComponent","create_advertise","ShowAllAdvertises","handleCreateAdvertise","bind","console","renderCategories","item","searchStr","toLowerCase","renderSearchbar","i","length","indexOf","renderOwnAdds","map","key","mongoose","Types","ObjectId","toString","copyrightImg","add_advertises_from_server","App","response","responseAction","catch","error","path","component","exact","Boolean","hostname","match","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","message","getState","createStore","dispatch","initializeStore","ReactDOM","render","stateCounter","document","getElementById","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28a964c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/benb-logo.c771846f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/C.887f96e7.jpg\";","export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    register_error = \"register_error\",\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_advertise = \"create_advertise\",\r\n    update_advertise = \"update_advertise\",\r\n    delete_advertise = \"delete_advertise\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    advertise_updated = \"advertise_updated\",\r\n    add_comment = \"add_comment\",\r\n    add_advertises_from_server = \"add_advertises_from_server\",\r\n    update_searchcategory= \"update_searchcategory\",\r\n    clear_searchcategory=\"clear_searchcategory\",\r\n    update_searchbar= \"update_searchbar\"\r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","export interface IUser {\r\n    _id?: string;\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    password:string;\r\n    email: string;\r\n}\r\n\r\nexport interface ICommentData {\r\n    _id?: string;\r\n    comment_user: string;\r\n    comment_text: string;\r\n  }\r\n\r\nexport interface ILogin{\r\n    errorMessage:string;\r\n}\r\nexport interface IRegister{\r\n    errorMessage:string;\r\n}\r\n\r\nexport interface IUI {\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse: boolean;\r\n    Login: ILogin;\r\n    Register: IRegister;\r\n    searchcategory: string;\r\n    searchbar: string;\r\n}\r\n\r\nexport interface IAdvertiseData {\r\n    _id: string;\r\n    advertise_title: string;\r\n    advertise_type: string;\r\n    advertise_category: string;\r\n    advertise_description: string;\r\n    advertise_price: string;\r\n    advertise_pictureUrl: string;\r\n    advertise_owner?: string;\r\n    advertise_comment?: string;\r\n    advertise_counter: number;\r\n    advertise_status: string;\r\n    advertise_message?: string;\r\n    advertise_city: string;\r\n  }\r\n\r\n\r\n\r\nexport interface IBM{\r\n    user:IUser;\r\n    advertises:IAdvertiseData[];\r\n    comment: ICommentData;\r\n}\r\n\r\n\r\nexport interface IState{\r\n    UI:IUI;\r\n    BM:IBM;\r\n}\r\n\r\n// initial state \r\nexport const initial:IState = {\r\n\tUI: {\r\n\t\tcounter: 0,\r\n\t\tloggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: {errorMessage:\"\"},\r\n        Register: {errorMessage:\"\"},\r\n        searchbar:\"\",\r\n        searchcategory: \"\"\r\n    },\r\n\tBM: {\r\n        user:{\r\n            firstname:\"\",\r\n            lastname:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            email: \"\"\r\n        },\r\n        advertises:[],\r\n        comment:{\r\n            comment_user: \"\",\r\n            comment_text: \"\"\r\n        }\r\n\t}\r\n};\r\n","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport '../App.css';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IAdvertiseData, IState } from '../state/appState';\r\n\r\nconst logoName = require('../images/benb-logo.jpg')\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchCategoryAction extends IAction {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchAction extends IAction {\r\n    searchbar: string;\r\n}\r\nreducerFunctions[ActionType.clear_searchcategory] = function (newState: IState, action: ISearchCategoryAction) {\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    return newState;\r\n}\r\nreducerFunctions[ActionType.update_searchbar] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchbar = action.searchbar;\r\n    return newState;\r\n}\r\nexport default class nav extends Component {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n\r\n    clearCategorySearch = (event: any) => {\r\n        const action: ISearchCategoryAction = {\r\n            type: ActionType.clear_searchcategory,\r\n            searchcategory: \"\",\r\n        };\r\n        this.clearSearch(event);\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSearchbarChange = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchbar,\r\n            searchbar: event.target.value,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    clearSearch = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchbar,\r\n            searchbar: \"\",\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn) {\r\n            return (\r\n                <nav>\r\n                    <div className=\"TitleBar\">\r\n                        <h2>Buy or Sell something today!</h2>\r\n                        <p>Free listings of your private advertisements, join for free now!</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li><NavLink to=\"/\" onClick={this.clearCategorySearch} >Home</NavLink></li>\r\n                            <div className=\"nav-search\">\r\n                                <NavLink to=\"/\">\r\n                                    <input className=\"NavBarSearchButton\" type=\"text\" name=\"query\" placeholder=\"Search by title\" value={window.CS.getUIState().searchbar} onChange={this.handleSearchbarChange} />\r\n                                    <button className=\"NavBarSearchButton\" onClick={this.clearSearch}>Clear Searchfield</button>\r\n                                </NavLink>\r\n                            </div>\r\n                            <li><NavLink to=\"/showadvertises\" onClick={this.clearCategorySearch} >My advertises</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <nav>\r\n                    <div className=\"TitleBar\">\r\n                        <h2>Buy or Sell something today!</h2>\r\n                        <p>Free listings of your private advertisements, join for free now!</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li><NavLink to=\"/\" onClick={this.clearCategorySearch} >Home</NavLink></li>\r\n                            <div className=\"nav-search\">\r\n                                <NavLink to=\"/\">\r\n                                    <input className=\"NavBarSearchButton\" type=\"text\" placeholder=\"Search by title\" value={window.CS.getUIState().searchbar} onChange={this.handleSearchbarChange} />\r\n                                    <button className=\"NavBarSearchButton\" onClick={this.clearSearch}>Clear Searchfield</button>\r\n                                </NavLink>\r\n                            </div>\r\n                            <li><NavLink to=\"/register\">Join us</NavLink></li>\r\n                            <li><NavLink to=\"/login\">Login</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { IAdvertiseData, IState } from '../state/appState';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IWindow } from '../framework/IWindow';\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchAction extends IAction {\r\n    searchcategory: string;\r\n}\r\n\r\nreducerFunctions[ActionType.update_searchcategory] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchbar = \"\";\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    return newState;\r\n}\r\n\r\nexport default class Categories extends Component {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    handleCategorySearch = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchcategory,\r\n            searchcategory: event.target.id,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"categories\">\r\n                <h3>Categories</h3>\r\n                <ul>\r\n                    <li><Link to=\"/\" id=\"antiques & collectors\" onClick={this.handleCategorySearch} >antiques & collectors</Link></li>\r\n                    <li><Link to=\"/\" id=\"car, motorcycle & accessories\" onClick={this.handleCategorySearch} >car, motorcycle & accessories</Link></li>\r\n                    <li><Link to=\"/\" id=\"baby & kids\" onClick={this.handleCategorySearch} >baby & kids</Link></li>\r\n                    <li><Link to=\"/\" id=\"beauty & wellness\" onClick={this.handleCategorySearch} >beauty & wellness</Link></li>\r\n                    <li><Link to=\"/\" id=\"books, movies & music\" onClick={this.handleCategorySearch} >books, movies & music</Link></li>\r\n                    <li><Link to=\"/\" id=\"electronics & computer\" onClick={this.handleCategorySearch} >electronics & computer</Link></li>\r\n                    <li><Link to=\"/\" id=\"mobile phone & equipment\" onClick={this.handleCategorySearch} >mobile phone & equipment</Link></li>\r\n                    <li><Link to=\"/\" id=\"pet needs\" onClick={this.handleCategorySearch} >pet needs</Link></li>\r\n                    <li><Link to=\"/\" id=\"hobby & leisure\" onClick={this.handleCategorySearch} >hobby & leisure</Link></li>\r\n                    <li><Link to=\"/\" id=\"property\" onClick={this.handleCategorySearch} >property</Link></li>\r\n                    <li><Link to=\"/\" id=\"jobs & services\" onClick={this.handleCategorySearch} >jobs & services</Link></li>\r\n                    <li><Link to=\"/\" id=\"clothes & fashion\" onClick={this.handleCategorySearch}>clothes & fashion</Link></li>\r\n                    <li><Link to=\"/\" id=\"furniture, housing & household\" onClick={this.handleCategorySearch} >furniture, housing & household</Link></li>\r\n                    <li><Link to=\"/\" id=\"jewelry & accessories\" onClick={this.handleCategorySearch} >jewelry & accessories</Link></li>\r\n                    <li><Link to=\"/\" id=\"games & consoles\" onClick={this.handleCategorySearch} >games & consoles</Link></li>\r\n                    <li><Link to=\"/\" id=\"sports, travel & outdoor\" onClick={this.handleCategorySearch} >sports, travel & outdoor</Link></li>\r\n                    <li><Link to=\"/\" id=\"tickets & events\" onClick={this.handleCategorySearch} >tickets & events</Link></li>\r\n                    <li><Link to=\"/\" id=\"moving & help\" onClick={this.handleCategorySearch} >moving & help</Link></li>\r\n                    <li><Link to=\"/\" id=\"tools\" onClick={this.handleCategorySearch} >tools</Link></li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState';\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\nexport interface ISearchAction extends IAction {\r\n    searchcategory: string;\r\n}\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n\r\n    newState.BM.user = { lastname: \"\", firstname: \"\", username: \"\", password: \"\", email: \"\" };\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_searchcategory] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    newState.UI.searchbar = \"\";\r\n    return newState;\r\n}    \r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n            return (\r\n                <div className=\"wholeLogout\">\r\n                    <p>Welcome, {window.CS.getBMState().user.username} !</p>\r\n                    <h4>contact informations:</h4>\r\n                    <p>Firstname: {window.CS.getBMState().user.firstname}</p>\r\n                    <p>Lastname: {window.CS.getBMState().user.lastname}</p>\r\n                    <button onClick={this.handleLogout}>Logout</button>\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n                <div className=\"loginFormDiv\">\r\n                    <form className=\"loginFormMain\" onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                        <br />\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                        <br />\r\n                        <input type=\"submit\" value=\"Login\" />\r\n                    </form>\r\n                    <p>{window.CS.getUIState().Login.errorMessage}</p>\r\n\r\n                </div>\r\n            )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    const action: ISearchAction = {\r\n                        type: ActionType.update_searchcategory,\r\n                        searchcategory: \"\",\r\n                    }\r\n                    window.CS.clientAction(action);\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/showadvertises\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called,\r\n        }\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchcategory,\r\n            searchcategory: \"\",\r\n        }\r\n        window.CS.clientAction(action);\r\n        window.CS.clientAction(uiAction);\r\n        axios.get('/auth/logout').then(res => {\r\n            const loggedoutAction: IAction = {\r\n                type: ActionType.user_logged_out\r\n            }\r\n            window.CS.clientAction(loggedoutAction);\r\n        }\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nreducerFunctions[ActionType.register_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Register.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    newState.BM.user = updateAction.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.loggedIn = true;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"registerFormDiv\" >\r\n                <form className=\"registerFormMain\" onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"firstname\">First name:</label>\r\n                    <input type=\"firstname\" placeholder=\"firstname\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} />\r\n                    <br />\r\n                    <label htmlFor=\"lastname\">Last name:</label>\r\n                    <input type=\"lastname\" placeholder=\"lastname\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} />\r\n                    <br />\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"email\" placeholder=\"yourname@mail.com\" onChange={this.handleEmailChange} value={window.CS.getBMState().user.email} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Register as new User\" />\r\n                </form>\r\n                <p>{window.CS.getUIState().Register.errorMessage}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEmailChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.email = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.register_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const uiAction: IAction = {\r\n                        type: ActionType.user_created\r\n                    }\r\n                    history.push('/');\r\n                    window.CS.clientAction(uiAction);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { IAdvertiseAction } from './ShowAllAdvertises';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IAdvertiseData, IState } from '../state/appState';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single asset to the browser window\r\n//it also contains the logic to change asset properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n    edit: boolean;\r\n    advertise: IAdvertiseData;\r\n}\r\n\r\ninterface IJSXState {\r\n    edit_mode: boolean;\r\n}\r\n\r\nreducerFunctions[ActionType.advertise_updated] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n    newState.UI.waitingForResponse = false;\r\n}\r\nreducerFunctions[ActionType.update_advertise] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n    let advertiseToChange: IAdvertiseData[] = newState.BM.advertises.filter(advertise => advertise._id === updateAction.advertise._id)\r\n    advertiseToChange[0].advertise_title = updateAction.advertise.advertise_title;\r\n    advertiseToChange[0].advertise_type = updateAction.advertise.advertise_type;\r\n    advertiseToChange[0].advertise_description = updateAction.advertise.advertise_description;\r\n    advertiseToChange[0].advertise_category = updateAction.advertise.advertise_category;\r\n    advertiseToChange[0].advertise_price = updateAction.advertise.advertise_price;\r\n    advertiseToChange[0].advertise_pictureUrl = updateAction.advertise.advertise_pictureUrl;\r\n    advertiseToChange[0].advertise_owner = updateAction.advertise.advertise_owner;\r\n    advertiseToChange[0].advertise_comment = updateAction.advertise.advertise_comment;\r\n    advertiseToChange[0].advertise_counter = updateAction.advertise.advertise_counter;\r\n    advertiseToChange[0].advertise_status = updateAction.advertise.advertise_status;\r\n    advertiseToChange[0].advertise_message = updateAction.advertise.advertise_message;\r\n    advertiseToChange[0].advertise_city = updateAction.advertise.advertise_city;\r\n    return newState;\r\n}\r\nreducerFunctions[ActionType.delete_advertise] = function (newState: IState, deleteAction: IAdvertiseAction) {\r\n    let advertisesToKeep: IAdvertiseData[] = newState.BM.advertises.filter(advertise => advertise._id !== deleteAction.advertise._id)\r\n    newState.BM.advertises = advertisesToKeep;\r\n    return newState;\r\n}\r\n\r\n\r\nexport default class SingleAdvertise extends React.PureComponent<IProps, IJSXState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            edit_mode: props.edit,\r\n        }\r\n    }\r\n    handleSwitchToEditMode = () => {\r\n        this.setState({ edit_mode: true });\r\n    }\r\n    handleTitleChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_title = event.target.value\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleTypeChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_type = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleDescriptionChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_description = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleCategoryChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_category = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handlePriceChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_price = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handlePictureUrlChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_pictureUrl = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleStatusChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_status = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleCityChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_city = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSave = (event: any) => {\r\n        this.setState({ edit_mode: false });\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.put('/advertises/update/' + this.props.advertise._id, this.props.advertise)\r\n            .then(res => {\r\n                const uiAction: IAction = {\r\n                    type: ActionType.advertise_updated\r\n                }\r\n                window.CS.clientAction(uiAction);\r\n            });\r\n    }\r\n    handleDelete = () => {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/advertises/delete/' + this.props.advertise._id)\r\n            .then(res => {\r\n                const action: IAdvertiseAction = {\r\n                    type: ActionType.delete_advertise,\r\n                    advertise: this.props.advertise\r\n                }\r\n                window.CS.clientAction(action)\r\n            });\r\n    }\r\n    render() {\r\n        let locationProp = this.props as any;\r\n        //if the component is in edit mode, it will render different than if it just shows the data\r\n        if (this.state.edit_mode && locationProp.location.pathname === \"/showadvertises\")\r\n            return (\r\n                <div className=\"wholeProduct\">\r\n                    <ul className=\"ulProduct\">\r\n                        <li className=\"titleName\">Title: <br></br> <input size={50} type=\"text\" name=\"title\" value={this.props.advertise.advertise_title} onChange={this.handleTitleChange} /></li>\r\n                        <li>PictureUrl: <br></br> <input size={50} type=\"text\" name=\"pictureUrl\" value={this.props.advertise.advertise_pictureUrl} onChange={this.handlePictureUrlChange} /></li>\r\n                        <li className=\"price\">Price: <br></br> <input size={50} type=\"text\" name=\"price\" value={this.props.advertise.advertise_price} onChange={this.handlePriceChange} /></li>\r\n                        <li className=\"description\">\r\n                            <label htmlFor=\"description\">Description: <br></br> </label>\r\n                            <textarea rows={5} cols={52} maxLength={300} name=\"description\" value={this.props.advertise.advertise_description} onChange={this.handleDescriptionChange} ></textarea>\r\n                        </li>\r\n                        {/*<li className=\"owner\">Owner: <br></br> {this.props.advertise.advertise_owner}</li>*/}\r\n                        <li className=\"city\">City: <br></br> <input size={50} type=\"text\" name=\"city\" value={this.props.advertise.advertise_city} onChange={this.handleCityChange} /></li>\r\n                        <li className=\"type\">\r\n                            <label htmlFor=\"type\">Choose a Type: <br></br> </label>\r\n                            <input type=\"radio\" name=\"type\" value=\"offer\" checked={this.props.advertise.advertise_type === \"offer\"} onClick={this.handleTypeChange} /> <span className=\"offerOrange\">offer</span>\r\n                            <input type=\"radio\" name=\"type\" value=\"search\" checked={this.props.advertise.advertise_type === \"search\"} onClick={this.handleTypeChange} /> <span className=\"searchBlue\">search</span>\r\n                        </li>\r\n                        <li className=\"status\">\r\n                            <label htmlFor=\"status\">Choose a Status: <br></br> </label>\r\n                            <input type=\"radio\" name=\"status\" value=\"available\" checked={this.props.advertise.advertise_status === \"available\"} onClick={this.handleStatusChange} /> <span className=\"availableGreen\">available</span>\r\n                            <input type=\"radio\" name=\"status\" value=\"sold\" checked={this.props.advertise.advertise_status === \"sold\"} onClick={this.handleStatusChange} /> <span className=\"soldRed\">sold</span>\r\n                        </li>\r\n                        {/*<li className=\"comment\">Comment: <br></br> {this.props.advertise.advertise_comment}</li>*/}\r\n                        {/*<li className=\"message\">Message: <br></br> {this.props.advertise.advertise_message}</li>*/}\r\n                        <li className=\"category\">\r\n                        Category: <br></br> <select className=\"selectBox\" name=\"category\" value={this.props.advertise.advertise_category} onChange={this.handleCategoryChange}>\r\n                            <option value=\"---\">---</option>\r\n                            <option value=\"antiques & collectors\">antiques & collectors</option>\r\n                            <option value=\"car, motorcycle & accessories\">car, motorcycle & accessories</option>\r\n                            <option value=\"baby & kids\">baby & kids</option>\r\n                            <option value=\"beauty & wellness\">beauty & wellness</option>\r\n                            <option value=\"books, movies & music\">books, movies & music</option>\r\n                            <option value=\"electronics & computer\">electronics & computer</option>\r\n                            <option value=\"mobile phone & equipment\">mobile phone & equipment</option>\r\n                            <option value=\"pet needs\">pet needs</option>\r\n                            <option value=\"hobby & leisure\">hobby & leisure</option>\r\n                            <option value=\"property\">property</option>\r\n                            <option value=\"jobs & services\">jobs & services</option>\r\n                            <option value=\"clothes & fashion\">clothes & fashion</option>\r\n                            <option value=\"furniture, housing & household\">furniture, housing & household</option>\r\n                            <option value=\"jewelry & accessories\">jewelry & accessories</option>\r\n                            <option value=\"games & consoles\">games & consoles</option>\r\n                            <option value=\"sports, travel & outdoor\">sports, travel & outdoor</option>\r\n                            <option value=\"tickets & events\">tickets & events</option>\r\n                            <option value=\"moving & help\">moving & help</option>\r\n                            <option value=\"tools\">tools</option>\r\n                            </select>\r\n                        </li>\r\n                        {/*<li className=\"counter\">Counter: <br></br> {this.props.advertise.advertise_counter}</li>*/}\r\n                        <li className=\"buttonsArea\">\r\n                            <button onClick={this.handleSave} id={this.props.advertise._id}>save</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        else if (window.CS.getUIState().loggedIn && locationProp.location.pathname === \"/showadvertises\") {\r\n            return (\r\n\r\n                <div className=\"wholeProduct\">\r\n                    <ul className=\"ulProduct\">\r\n                    <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n                        <li><img className=\"picture\" src={this.props.advertise.advertise_pictureUrl} alt=\"Picture\" /></li>\r\n                        <li className=\"price\"><span className=\"priceName\">Price:</span> <br></br> {this.props.advertise.advertise_price}</li>\r\n                        <li className=\"description\"><span className=\"descriptionName\">Description:</span> <br></br> {this.props.advertise.advertise_description}</li>\r\n                        <li className=\"owner\"><span className=\"ownerName\">Owner:</span> <br></br> {this.props.advertise.advertise_owner}</li>\r\n                        <li className=\"city\"><span className=\"cityName\">City:</span> <br></br> {this.props.advertise.advertise_city}</li>\r\n                        <li className=\"type\"><span className=\"typeName\">Type:</span> <br></br> {this.props.advertise.advertise_type}</li>\r\n                        <li className=\"status\"><span className=\"statusName\">Status:</span> <br></br> {this.props.advertise.advertise_status} </li>\r\n                        <li className=\"comment\"><span className=\"commentName\">Comment:</span> <br></br> {this.props.advertise.advertise_comment}</li>\r\n                        <li className=\"message\"><span className=\"messageName\">Message:</span> <br></br> {this.props.advertise.advertise_message}</li>\r\n                        <li className=\"category\"><span className=\"categoryName\">Category:</span> <br></br> {this.props.advertise.advertise_category}</li>\r\n                        <li className=\"counter\"><span className=\"counterName\">Counter:</span> <br></br> {this.props.advertise.advertise_counter}</li>\r\n                        <li className=\"buttonsArea\">\r\n                            <button onClick={this.handleSwitchToEditMode}>edit</button>\r\n                            <button onClick={this.handleDelete} id={this.props.advertise._id}>sell or dispose</button>\r\n                            {/*<button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>*/}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n\r\n                <div className=\"wholeProduct\">\r\n                    <ul className=\"ulProduct\">\r\n                        <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n                        <li><img className=\"picture\" src={this.props.advertise.advertise_pictureUrl} alt=\"Picture\" /></li>\r\n                        <li className=\"price\"><span className=\"priceName\">Price:</span> <br></br> {this.props.advertise.advertise_price}</li>\r\n                        <li className=\"description\"><span className=\"descriptionName\">Description:</span> <br></br> {this.props.advertise.advertise_description}</li>\r\n                        <li className=\"owner\"><span className=\"ownerName\">Owner:</span> <br></br> {this.props.advertise.advertise_owner}</li>\r\n                        <li className=\"city\"><span className=\"cityName\">City:</span> <br></br> {this.props.advertise.advertise_city}</li>\r\n                        <li className=\"type\"><span className=\"typeName\">Type:</span> <br></br> {this.props.advertise.advertise_type}</li>\r\n                        <li className=\"status\"><span className=\"statusName\">Status:</span> <br></br> {this.props.advertise.advertise_status}</li>\r\n                        <li className=\"comment\"><span className=\"commentName\">Comment:</span> <br></br> {this.props.advertise.advertise_comment}</li>\r\n                        <li className=\"message\"><span className=\"messageName\">Message:</span> <br></br> {this.props.advertise.advertise_message}</li>\r\n                        <li className=\"category\"><span className=\"categoryName\">Category:</span> <br></br> {this.props.advertise.advertise_category}</li>\r\n                        <li className=\"counter\"><span className=\"counterName\">Counter:</span> <br></br> {this.props.advertise.advertise_counter}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport SingleAdvertise from './SingleAdvertise'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport { IAdvertiseData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport '../App.css';\r\nimport { IWindow } from '../framework/IWindow'\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  user?: boolean\r\n};\r\ninterface IJSXState { };\r\nexport interface IAdvertiseAction extends IAction {\r\n  advertise: IAdvertiseData\r\n}\r\nreducerFunctions[ActionType.create_advertise] = function (newState: IState, action: IAdvertiseAction) {\r\n  newState.BM.advertises.push(action.advertise);\r\n  newState.UI.waitingForResponse = false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowAllAdvertises extends Component<IProps, IJSXState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.handleCreateAdvertise = this.handleCreateAdvertise.bind(this);\r\n  }\r\n  render() {\r\n    let locationProp = this.props as any;\r\n    //render for categories)\r\n    console.log(\"advertises\", window.CS.getBMState().advertises);\r\n    const renderCategories = window.CS.getBMState().advertises.filter((item: any) => item.advertise_category === window.CS.getUIState().searchcategory);\r\n    //render for searchbar)\r\n    let searchStr = window.CS.getUIState().searchbar.toLowerCase();\r\n    let renderSearchbar = [];\r\n    for (let i = 0; i < window.CS.getBMState().advertises.length; i++) {\r\n        if (window.CS.getBMState().advertises[i].advertise_title.toLowerCase().indexOf(searchStr) !== -1) {\r\n          renderSearchbar.push(window.CS.getBMState().advertises[i]);\r\n        }\r\n    }\r\n    //render for own advertises)\r\n    const renderOwnAdds = locationProp.location.pathname === \"/showadvertises\"\r\n      ?\r\n      window.CS.getBMState().advertises.filter((item: any) => item.advertise_owner === window.CS.getBMState().user.username)\r\n      :\r\n      window.CS.getBMState().advertises;\r\n    //\r\n    if (window.CS.getUIState().loggedIn) { //if user is logged in ...\r\n      if (window.CS.getUIState().searchcategory === \"\" && window.CS.getUIState().searchbar === \"\") { // ...and no category and search is selected\r\n        return (\r\n          <div>\r\n            {\r\n              locationProp.location.pathname === \"/showadvertises\" &&\r\n              <>\r\n                <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n                <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n                <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n                </p>\r\n              </>\r\n            } {/* ==> show all advertises from logged-in-user */}\r\n            <div>\r\n              {renderOwnAdds.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (window.CS.getUIState().searchbar === \"\") {\r\n        {/* category is selected, no searchbar */ }\r\n        return (\r\n          <div>\r\n            {\r\n              locationProp.location.pathname === \"/showadvertises\" &&\r\n              <>\r\n                <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n                <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n              <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n                </p>\r\n              </>\r\n            }\r\n            <div> {/* ==> show all adds from selected category */}\r\n              {renderCategories.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        {/* category is selected but also searchbar */ }\r\n        return (\r\n        <div>\r\n          {\r\n            locationProp.location.pathname === \"/showadvertises\" &&\r\n            <>\r\n              <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n              <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n        <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n              </p>\r\n            </>\r\n          }\r\n          <div> {/* ==> show all adds from search */}\r\n            {renderSearchbar.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      {/* no user ...*/ }\r\n      if (window.CS.getUIState().searchcategory === \"\" && window.CS.getUIState().searchbar === \"\") {\r\n        {/* ... and no category and searchbar is selected  */ }\r\n        return (\r\n          <div>\r\n            <div> {/* ==> show all advertises */}\r\n              {window.CS.getBMState().advertises.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (window.CS.getUIState().searchbar === \"\") {\r\n        {/* category is selected but no search*/ }\r\n        return (\r\n          <div>\r\n            <div> {/* ==> show all adds from selected category */}\r\n              {renderCategories.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n        <div>\r\n          <div> {/* ==> show all adds from search */}\r\n            {renderSearchbar.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  handleCreateAdvertise() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    const newAdvertise: IAdvertiseData = {\r\n      _id: mongoose.Types.ObjectId().toString(),\r\n      advertise_title: \"\",\r\n      advertise_type: \"offer\",\r\n      advertise_description: \"\",\r\n      advertise_category: \"---\",\r\n      advertise_price: \"\",\r\n      advertise_owner: window.CS.getBMState().user.username.toString(),\r\n      advertise_pictureUrl: \"\",\r\n      advertise_counter: 0,\r\n      advertise_status: \"available\",\r\n      advertise_city: \"\"\r\n    }\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.create_advertise,\r\n      advertise: newAdvertise\r\n    }\r\n    axios.post('/advertises/add', newAdvertise)\r\n      .then(res => {\r\n        window.CS.clientAction(action);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Categories from './components/Categories';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ShowAllAdvertises from './components/ShowAllAdvertises';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { IAdvertiseData, IState } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\nimport './App.css';\r\n\r\nimport { IWindow } from './framework/IWindow'\r\n\r\nconst copyrightImg = require('./images/C.jpg')\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface IAdvertisesLoadedAction extends IAction {\r\n  advertises: IAdvertiseData[]\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_advertises_from_server] = function (newState: IState, action: IAdvertisesLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.advertises = action.advertises;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps> {\r\n\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/advertises/read').then(response => {\r\n      const responseAction: IAdvertisesLoadedAction = {\r\n        type: ActionType.add_advertises_from_server,\r\n        advertises: response.data as IAdvertiseData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    if (window.CS.getUIState().loggedIn) {\r\n    return (\r\n      <div className=\"container-body\">\r\n        <NavBar /> {/* oben  */}\r\n        <div className=\"container-main-content\"> {/* mitte */}\r\n          <div className=\"container-categories\">\r\n            <Categories />\r\n          </div> {/* mitte links */}\r\n          <Switch>\r\n            <Route path=\"/showadvertises\" user={window.CS.getUIState().loggedIn} component={ShowAllAdvertises} />\r\n            <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n            <Route exact={true} path=\"/\" advertise={window.CS.getUIState().searchcategory} component={ShowAllAdvertises} />\r\n          </Switch>\r\n          <div className=\"container-userdetails\">\r\n          <Login />\r\n          </div> {/* mitte rechts */}\r\n        </div>\r\n        <div className=\"footer\"> {/* unten */}\r\n          <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n          </div>\r\n      </div>\r\n    )} else {\r\n      return (\r\n        <div className=\"container-body\">\r\n          <NavBar /> {/* oben  */}\r\n          <div className=\"container-main-content\"> {/* mitte */}\r\n            <div className=\"container-categories\">\r\n              <Categories />\r\n            </div> {/* mitte links */}\r\n            <Switch>\r\n              <Route path=\"/showadvertises\" component={ShowAllAdvertises} />\r\n              <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n              <Route exact={true} path=\"/\" advertise={window.CS.getUIState().searchcategory} component={ShowAllAdvertises} />\r\n            </Switch>\r\n            <div className=\"container-userdetails\">\r\n            <Route path=\"/login\" component={Login} />\r\n            </div> {/* mitte rechts */}\r\n          </div>\r\n          <div className=\"footer\"> {/* unten */}\r\n            <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n            </div>\r\n        </div>\r\n      )}\r\n    ;\r\n  }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n        console.log(message);\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        console.log(\"test server reached\")\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"https://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State\r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}