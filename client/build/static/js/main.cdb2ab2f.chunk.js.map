{"version":3,"sources":["images/C.jpg","framework/IAction.ts","state/appState.ts","reducer/appReducer.ts","components/NavBar.tsx","components/Categories.tsx","framework/history.ts","components/Login.tsx","components/Register.tsx","components/SingleAdvertise.tsx","components/ShowAllAdvertises.tsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["module","exports","ActionType","initial","UI","counter","loggedIn","waitingForResponse","Login","errorMessage","Register","searchbar","searchcategory","BM","user","firstname","lastname","username","password","email","advertises","comment","comment_advertise","comment_user","comment_text","reducerFunctions","reducer","state","action","window","CS","log","type","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","clear_searchcategory","update_searchbar","nav","clearCategorySearch","event","clearSearch","clientAction","handleSearchbarChange","target","value","clearUser","loggedoutAction","user_logged_out","getUIState","className","to","onClick","this","name","placeholder","onChange","Component","update_searchcategory","Categories","handleCategorySearch","id","createBrowserHistory","login_error","user_logged_in","getBMState","handleLogout","onSubmit","handleSubmit","htmlFor","handleUsernameChange","handlePasswordChange","update_user","preventDefault","uiAction","server_called","axios","post","then","res","data","loggedinAction","history","push","get","register_error","updateAction","user_created","handleFirstnameChange","handleLastnameChange","handleEmailChange","advertise_updated","update_advertise","advertiseToChange","filter","advertise","_id","advertise_title","advertise_type","advertise_description","advertise_category","advertise_price","advertise_pictureUrl","advertise_owner","advertise_comment","advertise_counter","advertise_status","advertise_message","advertise_city","delete_advertise","deleteAction","advertisesToKeep","SingleAdvertise","props","handleSwitchToEditMode","setState","edit_mode","handleTitleChange","newAdvertise","handleTypeChange","handleDescriptionChange","handleCategoryChange","handlePriceChange","handlePictureUrlChange","handleStatusChange","handleCityChange","handleSave","put","handleDelete","handleCommentUser","handleCommentDescription","handleCreateComment","e","console","edit","locationProp","location","pathname","size","rows","cols","maxLength","checked","src","alt","disabled","React","PureComponent","create_advertise","unshift","ShowAllAdvertises","handleCreateAdvertise","bind","sort","a","b","Date","created_at","renderCategories","item","searchStr","toLowerCase","renderSearchbar","i","length","indexOf","renderOwnAdds","map","key","mongoose","Types","ObjectId","toString","copyrightImg","require","add_advertises_from_server","App","response","responseAction","catch","error","path","component","exact","Boolean","hostname","match","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","message","getState","createStore","dispatch","initializeStore","ReactDOM","render","stateCounter","document","getElementById","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdb2ab2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/C.887f96e7.jpg\";","export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    register_error = \"register_error\",\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_advertise = \"create_advertise\",\r\n    update_advertise = \"update_advertise\",\r\n    delete_advertise = \"delete_advertise\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    advertise_updated = \"advertise_updated\",\r\n    add_comment = \"add_comment\",\r\n    add_advertises_from_server = \"add_advertises_from_server\",\r\n    update_searchcategory= \"update_searchcategory\",\r\n    clear_searchcategory=\"clear_searchcategory\",\r\n    update_searchbar= \"update_searchbar\"\r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","export interface IUser {\r\n    _id?: string;\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    password:string;\r\n    email: string;\r\n}\r\n\r\nexport interface ICommentData {\r\n    _id?: string;\r\n    comment_advertise:string,\r\n    comment_user: string;\r\n    comment_text: string;\r\n  }\r\n\r\nexport interface ILogin{\r\n    errorMessage:string;\r\n}\r\nexport interface IRegister{\r\n    errorMessage:string;\r\n}\r\n\r\nexport interface IUI {\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse: boolean;\r\n    Login: ILogin;\r\n    Register: IRegister;\r\n    searchcategory: string;\r\n    searchbar: string;\r\n}\r\n\r\nexport interface IAdvertiseData {\r\n    _id: string;\r\n    advertise_title: string;\r\n    advertise_type: string;\r\n    advertise_category: string;\r\n    advertise_description: string;\r\n    advertise_price: string;\r\n    advertise_pictureUrl: string;\r\n    advertise_owner?: string;\r\n    advertise_comment?: string;\r\n    advertise_counter: number;\r\n    advertise_status: string;\r\n    advertise_message?: string;\r\n    advertise_city: string;\r\n  }\r\n\r\n\r\n\r\nexport interface IBM{\r\n    user:IUser;\r\n    advertises:IAdvertiseData[];\r\n    comment: ICommentData;\r\n}\r\n\r\n\r\nexport interface IState{\r\n    UI:IUI;\r\n    BM:IBM;\r\n}\r\n\r\n// initial state \r\nexport const initial:IState = {\r\n\tUI: {\r\n\t\tcounter: 0,\r\n\t\tloggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: {errorMessage:\"\"},\r\n        Register: {errorMessage:\"\"},\r\n        searchbar:\"\",\r\n        searchcategory: \"\"\r\n    },\r\n\tBM: {\r\n        user:{\r\n            firstname:\"\",\r\n            lastname:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            email: \"\"\r\n        },\r\n        advertises:[],\r\n        comment:{\r\n            comment_advertise:\"\", \r\n            comment_user: \"\",\r\n            comment_text: \"\"\r\n        }\r\n\r\n\t}\r\n};\r\n","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport '../App.css';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState } from '../state/appState';\r\n\r\n//const logoName = require('../images/benb-logo.jpg')\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchCategoryAction extends IAction {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchAction extends IAction {\r\n    searchbar: string;\r\n}\r\nreducerFunctions[ActionType.clear_searchcategory] = function (newState: IState, action: ISearchCategoryAction) {\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    return newState;\r\n}\r\nreducerFunctions[ActionType.update_searchbar] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchbar = action.searchbar;\r\n    return newState;\r\n}\r\nexport default class nav extends Component {\r\n    //constructor(props: IProps) {\r\n    //    super(props);\r\n    //}\r\n\r\n    clearCategorySearch = (event: any) => {\r\n        const action: ISearchCategoryAction = {\r\n            type: ActionType.clear_searchcategory,\r\n            searchcategory: \"\",\r\n        };\r\n        this.clearSearch(event);\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSearchbarChange = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchbar,\r\n            searchbar: event.target.value,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    clearSearch = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchbar,\r\n            searchbar: \"\",\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    clearUser = (event: any) => {\r\n        const loggedoutAction: IAction = {\r\n            type: ActionType.user_logged_out\r\n        }\r\n        window.CS.clientAction(loggedoutAction);\r\n    }\r\n\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn) {\r\n            return (\r\n                <nav>\r\n                    <div className=\"TitleBar\">\r\n                        <h2>Buy or Sell something today!</h2>\r\n                        <p>Free listings of your private advertisements, join for free now!</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li><NavLink to=\"/\" onClick={this.clearCategorySearch} >Home</NavLink></li>\r\n                            <div className=\"nav-search\">\r\n                                <NavLink to=\"/\">\r\n                                    <input className=\"NavBarSearchButton\" type=\"text\" name=\"query\" placeholder=\"Search by title\" value={window.CS.getUIState().searchbar} onChange={this.handleSearchbarChange} />\r\n                                    <button className=\"NavBarSearchButton\" onClick={this.clearSearch}>Clear Searchfield</button>\r\n                                </NavLink>\r\n                            </div>\r\n                            <li><NavLink to=\"/showadvertises\" onClick={this.clearCategorySearch} >My advertises</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <nav>\r\n                    <div className=\"TitleBar\">\r\n                        <h2>Buy or Sell something today!</h2>\r\n                        <p>Free listings of your private advertisements, join for free now!</p>\r\n                    </div>\r\n                    <div>\r\n                        <ul>\r\n                            <li><NavLink to=\"/\" onClick={this.clearCategorySearch} >Home</NavLink></li>\r\n                            <div className=\"nav-search\">\r\n                                <NavLink to=\"/\">\r\n                                    <input className=\"NavBarSearchButton\" type=\"text\" placeholder=\"Search by title\" value={window.CS.getUIState().searchbar} onChange={this.handleSearchbarChange} />\r\n                                    <button className=\"NavBarSearchButton\" onClick={this.clearSearch}>Clear Searchfield</button>\r\n                                </NavLink>\r\n                            </div>\r\n                            <li><NavLink to=\"/register\" onClick={this.clearUser}>Join us</NavLink></li>\r\n                            <li><NavLink to=\"/login\" onClick={this.clearUser}>Login</NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IState } from '../state/appState';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IWindow } from '../framework/IWindow';\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n    searchcategory: string;\r\n}\r\nexport interface ISearchAction extends IAction {\r\n    searchcategory: string;\r\n}\r\n\r\nreducerFunctions[ActionType.update_searchcategory] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchbar = \"\";\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    return newState;\r\n}\r\n\r\nexport default class Categories extends Component {\r\n    //constructor(props: IProps) {\r\n    //    super(props);\r\n    //}\r\n    handleCategorySearch = (event: any) => {\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchcategory,\r\n            searchcategory: event.target.id,\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"categories\">\r\n                <h3>Categories</h3>\r\n                <ul>\r\n                    <li><Link to=\"/\" id=\"antiques & collectors\" onClick={this.handleCategorySearch} >antiques & collectors</Link></li>\r\n                    <li><Link to=\"/\" id=\"car, motorcycle & accessories\" onClick={this.handleCategorySearch} >car, motorcycle & accessories</Link></li>\r\n                    <li><Link to=\"/\" id=\"baby & kids\" onClick={this.handleCategorySearch} >baby & kids</Link></li>\r\n                    <li><Link to=\"/\" id=\"beauty & wellness\" onClick={this.handleCategorySearch} >beauty & wellness</Link></li>\r\n                    <li><Link to=\"/\" id=\"books, movies & music\" onClick={this.handleCategorySearch} >books, movies & music</Link></li>\r\n                    <li><Link to=\"/\" id=\"electronics & computer\" onClick={this.handleCategorySearch} >electronics & computer</Link></li>\r\n                    <li><Link to=\"/\" id=\"mobile phone & equipment\" onClick={this.handleCategorySearch} >mobile phone & equipment</Link></li>\r\n                    <li><Link to=\"/\" id=\"pet needs\" onClick={this.handleCategorySearch} >pet needs</Link></li>\r\n                    <li><Link to=\"/\" id=\"hobby & leisure\" onClick={this.handleCategorySearch} >hobby & leisure</Link></li>\r\n                    <li><Link to=\"/\" id=\"property\" onClick={this.handleCategorySearch} >property</Link></li>\r\n                    <li><Link to=\"/\" id=\"jobs & services\" onClick={this.handleCategorySearch} >jobs & services</Link></li>\r\n                    <li><Link to=\"/\" id=\"clothes & fashion\" onClick={this.handleCategorySearch}>clothes & fashion</Link></li>\r\n                    <li><Link to=\"/\" id=\"furniture, housing & household\" onClick={this.handleCategorySearch} >furniture, housing & household</Link></li>\r\n                    <li><Link to=\"/\" id=\"jewelry & accessories\" onClick={this.handleCategorySearch} >jewelry & accessories</Link></li>\r\n                    <li><Link to=\"/\" id=\"games & consoles\" onClick={this.handleCategorySearch} >games & consoles</Link></li>\r\n                    <li><Link to=\"/\" id=\"sports, travel & outdoor\" onClick={this.handleCategorySearch} >sports, travel & outdoor</Link></li>\r\n                    <li><Link to=\"/\" id=\"tickets & events\" onClick={this.handleCategorySearch} >tickets & events</Link></li>\r\n                    <li><Link to=\"/\" id=\"moving & help\" onClick={this.handleCategorySearch} >moving & help</Link></li>\r\n                    <li><Link to=\"/\" id=\"tools\" onClick={this.handleCategorySearch} >tools</Link></li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState';\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\nexport interface ISearchAction extends IAction {\r\n    searchcategory: string;\r\n}\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n\r\n    newState.BM.user = { lastname: \"\", firstname: \"\", username: \"\", password: \"\", email: \"\" };\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_searchcategory] = function (newState: IState, action: ISearchAction) {\r\n    newState.UI.searchcategory = action.searchcategory;\r\n    newState.UI.searchbar = \"\";\r\n    return newState;\r\n}    \r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n            return (\r\n                <div className=\"wholeLogout\">\r\n                    <p>Welcome, {window.CS.getBMState().user.username} !</p>\r\n                    <h4>contact informations:</h4>\r\n                    <p>Firstname: {window.CS.getBMState().user.firstname}</p>\r\n                    <p>Lastname: {window.CS.getBMState().user.lastname}</p>\r\n                    <button onClick={this.handleLogout}>Logout</button>\r\n                </div>\r\n            )\r\n        else\r\n            return (\r\n                <div className=\"loginFormDiv\">\r\n                    <form className=\"loginFormMain\" onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                        <br />\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                        <br />\r\n                        <input type=\"submit\" value=\"Login\" />\r\n                    </form>\r\n                    <p>{window.CS.getUIState().Login.errorMessage}</p>\r\n\r\n                </div>\r\n            )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    const action: ISearchAction = {\r\n                        type: ActionType.update_searchcategory,\r\n                        searchcategory: \"\",\r\n                    }\r\n                    window.CS.clientAction(action);\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/showadvertises\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called,\r\n        }\r\n        const action: ISearchAction = {\r\n            type: ActionType.update_searchcategory,\r\n            searchcategory: \"\",\r\n        }\r\n        window.CS.clientAction(action);\r\n        window.CS.clientAction(uiAction);\r\n        axios.get('/auth/logout').then(res => {\r\n            const loggedoutAction: IAction = {\r\n                type: ActionType.user_logged_out\r\n            }\r\n            window.CS.clientAction(loggedoutAction);\r\n        }\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nreducerFunctions[ActionType.register_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Register.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    newState.BM.user = updateAction.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.loggedIn = true;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"registerFormDiv\" >\r\n                <form className=\"registerFormMain\" onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"firstname\">First name:</label>\r\n                    <input type=\"firstname\" placeholder=\"firstname\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} />\r\n                    <br />\r\n                    <label htmlFor=\"lastname\">Last name:</label>\r\n                    <input type=\"lastname\" placeholder=\"lastname\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} />\r\n                    <br />\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"email\" placeholder=\"yourname@mail.com\" onChange={this.handleEmailChange} value={window.CS.getBMState().user.email} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Register as new User\" />\r\n                </form>\r\n                <p>{window.CS.getUIState().Register.errorMessage}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEmailChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.email = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.register_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const uiAction: IAction = {\r\n                        type: ActionType.user_created\r\n                    }\r\n                    history.push('/');\r\n                    window.CS.clientAction(uiAction);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport mongoose from 'mongoose';\r\nimport { IAdvertiseAction } from \"./ShowAllAdvertises\";\r\nimport { ActionType, IAction } from \"../framework/IAction\";\r\nimport { IAdvertiseData, IState,ICommentData } from \"../state/appState\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\n\r\nimport { IWindow } from \"../framework/IWindow\";\r\nimport { reducerFunctions } from \"../reducer/appReducer\";\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single asset to the browser window\r\n//it also contains the logic to change asset properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n  edit: boolean;\r\n  advertise: IAdvertiseData;\r\n}\r\n\r\ninterface IJSXState {\r\n  edit_mode: boolean;\r\n  comment:{\r\n    comment_user: string,\r\n    comment_text: string\r\n}\r\n}\r\nexport interface IComment extends IAction {\r\n    comment: ICommentData\r\n}\r\n\r\nreducerFunctions[ActionType.advertise_updated] = function(\r\n  newState: IState,\r\n  updateAction: IAdvertiseAction\r\n) {\r\n  newState.UI.waitingForResponse = false;\r\n};\r\nreducerFunctions[ActionType.update_advertise] = function(\r\n  newState: IState,\r\n  updateAction: IAdvertiseAction\r\n) {\r\n  let advertiseToChange: IAdvertiseData[] = newState.BM.advertises.filter(\r\n    advertise => advertise._id === updateAction.advertise._id\r\n  );\r\n  advertiseToChange[0].advertise_title = updateAction.advertise.advertise_title;\r\n  advertiseToChange[0].advertise_type = updateAction.advertise.advertise_type;\r\n  advertiseToChange[0].advertise_description =\r\n    updateAction.advertise.advertise_description;\r\n  advertiseToChange[0].advertise_category =\r\n    updateAction.advertise.advertise_category;\r\n  advertiseToChange[0].advertise_price = updateAction.advertise.advertise_price;\r\n  advertiseToChange[0].advertise_pictureUrl =\r\n    updateAction.advertise.advertise_pictureUrl;\r\n  advertiseToChange[0].advertise_owner = updateAction.advertise.advertise_owner;\r\n  advertiseToChange[0].advertise_comment =\r\n    updateAction.advertise.advertise_comment;\r\n  advertiseToChange[0].advertise_counter =\r\n    updateAction.advertise.advertise_counter;\r\n  advertiseToChange[0].advertise_status =\r\n    updateAction.advertise.advertise_status;\r\n  advertiseToChange[0].advertise_message =\r\n    updateAction.advertise.advertise_message;\r\n  advertiseToChange[0].advertise_city = updateAction.advertise.advertise_city;\r\n  return newState;\r\n};\r\nreducerFunctions[ActionType.delete_advertise] = function(\r\n  newState: IState,\r\n  deleteAction: IAdvertiseAction\r\n) {\r\n  let advertisesToKeep: IAdvertiseData[] = newState.BM.advertises.filter(\r\n    advertise => advertise._id !== deleteAction.advertise._id\r\n  );\r\n  newState.BM.advertises = advertisesToKeep;\r\n  return newState;\r\n};\r\n\r\nexport default class SingleAdvertise extends React.PureComponent<\r\n  IProps,\r\n  IJSXState\r\n> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      edit_mode: props.edit,\r\n      comment:{\r\n        comment_user: \"\",\r\n        comment_text: \"\"\r\n    }\r\n    };\r\n  }\r\n  handleSwitchToEditMode = () => {\r\n    this.setState({ edit_mode: true });\r\n  };\r\n  handleTitleChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_title = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleTypeChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_type = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleDescriptionChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_description = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleCategoryChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_category = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handlePriceChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_price = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handlePictureUrlChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_pictureUrl = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleStatusChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_status = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleCityChange = (event: any) => {\r\n    const newAdvertise = this.props.advertise;\r\n    newAdvertise.advertise_city = event.target.value;\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.update_advertise,\r\n      advertise: newAdvertise\r\n    };\r\n    window.CS.clientAction(action);\r\n  };\r\n\r\n  handleSave = (event: any) => {\r\n    this.setState({ edit_mode: false });\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    };\r\n    window.CS.clientAction(uiAction);\r\n    axios\r\n      .put(\r\n        \"/advertises/update/\" + this.props.advertise._id,\r\n        this.props.advertise\r\n      )\r\n      .then(res => {\r\n        const uiAction: IAction = {\r\n          type: ActionType.advertise_updated\r\n        };\r\n        window.CS.clientAction(uiAction);\r\n      });\r\n  };\r\n  handleDelete = () => {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    };\r\n    window.CS.clientAction(uiAction);\r\n    axios.post(\"/advertises/delete/\" + this.props.advertise._id).then(res => {\r\n      const action: IAdvertiseAction = {\r\n        type: ActionType.delete_advertise,\r\n        advertise: this.props.advertise\r\n      };\r\n      window.CS.clientAction(action);\r\n    });\r\n  };\r\n  handleCommentUser = (event: any) => {\r\n    let comment = {\r\n        comment_advertise: window.CS.getBMState().advertises[0]._id,\r\n        comment_text: event.target.value,\r\n        comment_user: window.CS.getBMState().user.username\r\n    };\r\n    this.setState({\r\n        comment: comment\r\n    })\r\n}\r\nhandleCommentDescription = (event: any) => {\r\n    let comment = {\r\n        comment_advertise: window.CS.getBMState().advertises[0]._id,\r\n        comment_text: event.target.value,\r\n        comment_user: window.CS.getBMState().user.username\r\n    };\r\n    this.setState({\r\n        comment: comment\r\n    })\r\n}\r\n\r\nhandleCreateComment = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(\"handleCreateComment invoked\");\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.post('/advertises/comment/add', this.state.comment)\r\n      .then(res => {\r\n        console.log(res.data)\r\n      });\r\n}\r\n\r\n\r\n  render() {\r\n    let locationProp = this.props as any;\r\n    //if the component is in edit mode, it will render different than if it just shows the data\r\n    if (\r\n      this.state.edit_mode &&\r\n      locationProp.location.pathname === \"/showadvertises\"\r\n    )\r\n      return (\r\n        <div className=\"wholeProduct\">\r\n          <ul className=\"ulProduct\">\r\n            <li className=\"titleName\">\r\n              Title: <br></br>{\" \"}\r\n              <input\r\n                size={50}\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={this.props.advertise.advertise_title}\r\n                onChange={this.handleTitleChange}\r\n              />\r\n            </li>\r\n            <li>\r\n              PictureUrl: <br></br>{\" \"}\r\n              <input\r\n                size={50}\r\n                type=\"text\"\r\n                name=\"pictureUrl\"\r\n                value={this.props.advertise.advertise_pictureUrl}\r\n                onChange={this.handlePictureUrlChange}\r\n              />\r\n            </li>\r\n            <li className=\"price\">\r\n              Price: <br></br>{\" \"}\r\n              <input\r\n                size={50}\r\n                type=\"text\"\r\n                name=\"price\"\r\n                value={this.props.advertise.advertise_price}\r\n                onChange={this.handlePriceChange}\r\n              />\r\n            </li>\r\n            <li className=\"description\">\r\n              <label htmlFor=\"description\">\r\n                Description: <br></br>{\" \"}\r\n              </label>\r\n              <textarea\r\n                rows={5}\r\n                cols={52}\r\n                maxLength={300}\r\n                name=\"description\"\r\n                value={this.props.advertise.advertise_description}\r\n                onChange={this.handleDescriptionChange}\r\n              ></textarea>\r\n            </li>\r\n            {/*<li className=\"owner\">Owner: <br></br> {this.props.advertise.advertise_owner}</li>*/}\r\n            <li className=\"city\">\r\n              City: <br></br>{\" \"}\r\n              <input\r\n                size={50}\r\n                type=\"text\"\r\n                name=\"city\"\r\n                value={this.props.advertise.advertise_city}\r\n                onChange={this.handleCityChange}\r\n              />\r\n            </li>\r\n            <li className=\"type\">\r\n              <label htmlFor=\"type\">\r\n                Choose a Type: <br></br>{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"type\"\r\n                value=\"offer\"\r\n                checked={this.props.advertise.advertise_type === \"offer\"}\r\n                onClick={this.handleTypeChange}\r\n              />{\" \"}\r\n              <span className=\"offerOrange\">offer</span>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"type\"\r\n                value=\"search\"\r\n                checked={this.props.advertise.advertise_type === \"search\"}\r\n                onClick={this.handleTypeChange}\r\n              />{\" \"}\r\n              <span className=\"searchBlue\">search</span>\r\n            </li>\r\n            <li className=\"status\">\r\n              <label htmlFor=\"status\">\r\n                Choose a Status: <br></br>{\" \"}\r\n              </label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"status\"\r\n                value=\"available\"\r\n                checked={this.props.advertise.advertise_status === \"available\"}\r\n                onClick={this.handleStatusChange}\r\n              />{\" \"}\r\n              <span className=\"availableGreen\">available</span>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"status\"\r\n                value=\"sold\"\r\n                checked={this.props.advertise.advertise_status === \"sold\"}\r\n                onClick={this.handleStatusChange}\r\n              />{\" \"}\r\n              <span className=\"soldRed\">sold</span>\r\n            </li>\r\n            {/*<li className=\"comment\">Comment: <br></br> {this.props.advertise.advertise_comment}</li>*/}\r\n            {/*<li className=\"message\">Message: <br></br> {this.props.advertise.advertise_message}</li>*/}\r\n            <li className=\"category\">\r\n              Category: <br></br>{\" \"}\r\n              <select\r\n                className=\"selectBox\"\r\n                name=\"category\"\r\n                value={this.props.advertise.advertise_category}\r\n                onChange={this.handleCategoryChange}\r\n              >\r\n                <option value=\"---\">---</option>\r\n                <option value=\"antiques & collectors\">\r\n                  antiques & collectors\r\n                </option>\r\n                <option value=\"car, motorcycle & accessories\">\r\n                  car, motorcycle & accessories\r\n                </option>\r\n                <option value=\"baby & kids\">baby & kids</option>\r\n                <option value=\"beauty & wellness\">beauty & wellness</option>\r\n                <option value=\"books, movies & music\">\r\n                  books, movies & music\r\n                </option>\r\n                <option value=\"electronics & computer\">\r\n                  electronics & computer\r\n                </option>\r\n                <option value=\"mobile phone & equipment\">\r\n                  mobile phone & equipment\r\n                </option>\r\n                <option value=\"pet needs\">pet needs</option>\r\n                <option value=\"hobby & leisure\">hobby & leisure</option>\r\n                <option value=\"property\">property</option>\r\n                <option value=\"jobs & services\">jobs & services</option>\r\n                <option value=\"clothes & fashion\">clothes & fashion</option>\r\n                <option value=\"furniture, housing & household\">\r\n                  furniture, housing & household\r\n                </option>\r\n                <option value=\"jewelry & accessories\">\r\n                  jewelry & accessories\r\n                </option>\r\n                <option value=\"games & consoles\">games & consoles</option>\r\n                <option value=\"sports, travel & outdoor\">\r\n                  sports, travel & outdoor\r\n                </option>\r\n                <option value=\"tickets & events\">tickets & events</option>\r\n                <option value=\"moving & help\">moving & help</option>\r\n                <option value=\"tools\">tools</option>\r\n              </select>\r\n            </li>\r\n            {/*<li className=\"counter\">Counter: <br></br> {this.props.advertise.advertise_counter}</li>*/}\r\n            <li className=\"buttonsArea\">\r\n              <button onClick={this.handleSave} id={this.props.advertise._id}>\r\n                save\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    else if (\r\n      window.CS.getUIState().loggedIn &&\r\n      locationProp.location.pathname === \"/showadvertises\"\r\n    ) {\r\n      return (\r\n        <div className=\"wholeProduct\">\r\n          <ul className=\"ulProduct\">\r\n            <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n            <li>\r\n              <img\r\n                className=\"picture\"\r\n                src={this.props.advertise.advertise_pictureUrl}\r\n                alt=\"Picture\"\r\n              />\r\n            </li>\r\n            <li className=\"price\">\r\n              <span className=\"priceName\">Price:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_price}\r\n            </li>\r\n            <li className=\"description\">\r\n              <span className=\"descriptionName\">Description:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_description}\r\n            </li>\r\n            <li className=\"owner\">\r\n              <span className=\"ownerName\">Owner:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_owner}\r\n            </li>\r\n            <li className=\"city\">\r\n              <span className=\"cityName\">City:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_city}\r\n            </li>\r\n            <li className=\"type\">\r\n              <span className=\"typeName\">Type:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_type}\r\n            </li>\r\n            <li className=\"status\">\r\n              <span className=\"statusName\">Status:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_status}{\" \"}\r\n            </li>\r\n            <li className=\"comment\">\r\n              <span className=\"commentName\">Comment:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_comment}\r\n            </li>\r\n            <li className=\"message\">\r\n              <span className=\"messageName\">Message:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_message}\r\n            </li>\r\n            <li className=\"category\">\r\n              <span className=\"categoryName\">Category:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_category}\r\n            </li>\r\n            <li className=\"counter\">\r\n              <span className=\"counterName\">Counter:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_counter}\r\n            </li>\r\n            <li className=\"buttonsArea\">\r\n              <button onClick={this.handleSwitchToEditMode}>edit</button>\r\n              <button onClick={this.handleDelete} id={this.props.advertise._id}>\r\n                sell or dispose\r\n              </button>\r\n              {/*<button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>*/}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <div className=\"wholeProduct\">\r\n          <ul className=\"ulProduct\">\r\n            <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n            <li>\r\n              <img\r\n                className=\"picture\"\r\n                src={this.props.advertise.advertise_pictureUrl}\r\n                alt=\"Picture\"\r\n              />\r\n            </li>\r\n            <li className=\"price\">\r\n              <span className=\"priceName\">Price:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_price}\r\n            </li>\r\n            <li className=\"description\">\r\n              <span className=\"descriptionName\">Description:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_description}\r\n            </li>\r\n            <li className=\"owner\">\r\n              <span className=\"ownerName\">Owner:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_owner}\r\n            </li>\r\n            <li className=\"city\">\r\n              <span className=\"cityName\">City:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_city}\r\n            </li>\r\n            <li className=\"type\">\r\n              <span className=\"typeName\">Type:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_type}\r\n            </li>\r\n            <li className=\"status\">\r\n              <span className=\"statusName\">Status:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_status}\r\n            </li>\r\n            <li className=\"comment\">\r\n              <span className=\"commentName\">Comment:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_comment}\r\n            </li>\r\n            <li className=\"message\">\r\n              <span className=\"messageName\">Message:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_message}\r\n            </li>\r\n            <li className=\"category\">\r\n              <span className=\"categoryName\">Category:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_category}\r\n            </li>\r\n            <li className=\"counter\">\r\n              <span className=\"counterName\">Counter:</span> <br></br>{\" \"}\r\n              {this.props.advertise.advertise_counter}\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <div>\r\n                <form onSubmit={this.handleCreateComment}>\r\n                  <label htmlFor=\"commentUser\">Username:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={window.CS.getBMState().user.username}\r\n                    disabled\r\n                  />\r\n                  <br />\r\n                  <label htmlFor=\"commentText\">Comment:</label>\r\n                  <textarea\r\n                    rows={6}\r\n                    cols={52}\r\n                    maxLength={400}\r\n                    name=\"description\"\r\n                    onChange={this.handleCommentDescription}\r\n                    value={this.state.comment.comment_text}\r\n                  ></textarea>\r\n                  <br />\r\n                  <button type=\"submit\">\r\n                    Add Comment\r\n                  </button>\r\n                </form>\r\n                <p>{window.CS.getUIState().Register.errorMessage}</p>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport SingleAdvertise from './SingleAdvertise'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport { IAdvertiseData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport '../App.css';\r\nimport { IWindow } from '../framework/IWindow'\r\n\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  user?: boolean\r\n};\r\ninterface IJSXState { };\r\nexport interface IAdvertiseAction extends IAction {\r\n  advertise: IAdvertiseData\r\n}\r\nreducerFunctions[ActionType.create_advertise] = function (newState: IState, action: IAdvertiseAction) {\r\n  newState.BM.advertises.unshift(action.advertise);\r\n  newState.UI.waitingForResponse = false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowAllAdvertises extends Component<IProps, IJSXState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.handleCreateAdvertise = this.handleCreateAdvertise.bind(this);\r\n  }\r\n  render() {\r\n    let locationProp = this.props as any;\r\n    // sort from new to old\r\n    window.CS.getBMState().advertises && // if advertises are available ...\r\n    window.CS.getBMState().advertises.sort((a: any,b : any) => Date.parse(b.created_at) - Date.parse(a.created_at));\r\n    \r\n    //render for categories\r\n    const renderCategories = window.CS.getBMState().advertises.filter((item: any) => item.advertise_category === window.CS.getUIState().searchcategory);\r\n    \r\n    //render for searchbar)\r\n    let searchStr = window.CS.getUIState().searchbar.toLowerCase();\r\n    let renderSearchbar = [];\r\n    for (let i = 0; i < window.CS.getBMState().advertises.length; i++) {\r\n        if (window.CS.getBMState().advertises[i].advertise_title.toLowerCase().indexOf(searchStr) !== -1) {\r\n          renderSearchbar.push(window.CS.getBMState().advertises[i]);\r\n        }\r\n    }\r\n    //render for own advertises\r\n    const renderOwnAdds = locationProp.location.pathname === \"/showadvertises\"\r\n      ?\r\n      window.CS.getBMState().advertises.filter((item: any) => item.advertise_owner === window.CS.getBMState().user.username)\r\n      :\r\n      window.CS.getBMState().advertises;\r\n    //\r\n\r\n    if (window.CS.getUIState().loggedIn) { //if user is logged in ...\r\n      if (window.CS.getUIState().searchcategory === \"\" && window.CS.getUIState().searchbar === \"\") { // ...and no category and search is selected\r\n        return (\r\n          <div>\r\n            {\r\n              locationProp.location.pathname === \"/showadvertises\" &&\r\n              <>\r\n                <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n                <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n                <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n                </p>\r\n              </>\r\n            } {/* ==> show all advertises from logged-in-user */}\r\n            <div>\r\n              {renderOwnAdds.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (window.CS.getUIState().searchbar === \"\") {\r\n        /* category is selected, no searchbar */ \r\n        return (\r\n          <div>\r\n            {\r\n              locationProp.location.pathname === \"/showadvertises\" &&\r\n              <>\r\n                <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n                <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n              <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n                </p>\r\n              </>\r\n            }\r\n            <div> {/* ==> show all adds from selected category */}\r\n              {renderCategories.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        /* category is selected but also searchbar */\r\n        return (\r\n        <div>\r\n          {\r\n            locationProp.location.pathname === \"/showadvertises\" &&\r\n            <>\r\n              <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n              <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n        <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n              </p>\r\n            </>\r\n          }\r\n          <div> {/* ==> show all adds from search */}\r\n            {renderSearchbar.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      /* no user ...*/ \r\n      if (window.CS.getUIState().searchcategory === \"\" && window.CS.getUIState().searchbar === \"\") {\r\n        /* ... and no category and searchbar is selected  */\r\n        return (\r\n          <div>\r\n            <div> {/* ==> show all advertises */}\r\n              {window.CS.getBMState().advertises.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else if (window.CS.getUIState().searchbar === \"\") {\r\n        /* category is selected but no search*/ \r\n        return (\r\n          <div>\r\n            <div> {/* ==> show all adds from selected category */}\r\n              {renderCategories.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n            </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n        <div>\r\n          <div> {/* ==> show all adds from search */}\r\n            {renderSearchbar.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  handleCreateAdvertise() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    const newAdvertise: IAdvertiseData = {\r\n      _id: mongoose.Types.ObjectId().toString(),\r\n      advertise_title: \"\",\r\n      advertise_type: \"offer\",\r\n      advertise_description: \"\",\r\n      advertise_category: \"---\",\r\n      advertise_price: \"\",\r\n      advertise_owner: window.CS.getBMState().user.username.toString(),\r\n      advertise_pictureUrl: \"https://res.cloudinary.com/benb-board/image/upload/v1572432933/benb-board/sale_buijkf.jpg\",\r\n      advertise_counter: 0,\r\n      advertise_status: \"available\",\r\n      advertise_city: \"\",\r\n    }\r\n    const action: IAdvertiseAction = {\r\n      type: ActionType.create_advertise,\r\n      advertise: newAdvertise\r\n    }\r\n    axios.post('/advertises/add', newAdvertise)\r\n      .then(res => {\r\n        window.CS.clientAction(action);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Categories from './components/Categories';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ShowAllAdvertises from './components/ShowAllAdvertises';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { IAdvertiseData, IState } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\nimport './App.css';\r\n\r\nimport { IWindow } from './framework/IWindow'\r\n\r\nconst copyrightImg = require('./images/C.jpg')\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface IAdvertisesLoadedAction extends IAction {\r\n  advertises: IAdvertiseData[]\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_advertises_from_server] = function (newState: IState, action: IAdvertisesLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.advertises = action.advertises;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps> {\r\n\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/advertises/read').then(response => {\r\n      const responseAction: IAdvertisesLoadedAction = {\r\n        type: ActionType.add_advertises_from_server,\r\n        advertises: response.data as IAdvertiseData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    if (window.CS.getUIState().loggedIn) {\r\n    return (\r\n      <div className=\"container-body\">\r\n        <NavBar /> {/* oben  */}\r\n        <div className=\"container-main-content\"> {/* mitte */}\r\n          <div className=\"container-categories\">\r\n            <Categories />\r\n          </div> {/* mitte links */}\r\n          <Switch>\r\n            <Route path=\"/showadvertises\" user={window.CS.getUIState().loggedIn} component={ShowAllAdvertises} />\r\n            <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n            <Route exact={true} path=\"/\" advertise={window.CS.getUIState().searchcategory} component={ShowAllAdvertises} />\r\n          </Switch>\r\n          <div className=\"container-userdetails\">\r\n          <Login />\r\n          </div> {/* mitte rechts */}\r\n        </div>\r\n        <div className=\"footer\"> {/* unten */}\r\n          <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n          </div>\r\n      </div>\r\n    )} else {\r\n      return (\r\n        <div className=\"container-body\">\r\n          <NavBar /> {/* oben  */}\r\n          <div className=\"container-main-content\"> {/* mitte */}\r\n            <div className=\"container-categories\">\r\n              <Categories />\r\n            </div> {/* mitte links */}\r\n            <Switch>\r\n              <Route path=\"/showadvertises\" component={ShowAllAdvertises} />\r\n              <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n              <Route exact={true} path=\"/\" advertise={window.CS.getUIState().searchcategory} component={ShowAllAdvertises} />\r\n            </Switch>\r\n            <div className=\"container-userdetails\">\r\n            <Route path=\"/login\" component={Login} />\r\n            </div> {/* mitte rechts */}\r\n          </div>\r\n          <div className=\"footer\"> {/* unten */}\r\n            <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n            </div>\r\n        </div>\r\n      )}\r\n    ;\r\n  }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n        console.log(message);\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        console.log(\"test server reached\")\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"https://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State\r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}