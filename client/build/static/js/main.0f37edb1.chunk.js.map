{"version":3,"sources":["images/benb-logo.jpg","images/C.jpg","framework/IAction.ts","components/NavBar.tsx","components/Categories.tsx","state/appState.ts","reducer/appReducer.ts","framework/history.ts","components/Login.tsx","components/Register.tsx","components/SingleAdvertise.tsx","components/ShowAllAdvertises.tsx","App.tsx","serviceWorker.ts","framework/CS.ts","index.tsx"],"names":["module","exports","ActionType","logoName","require","nav","props","window","CS","getUIState","loggedIn","id","src","alt","to","className","action","method","type","name","placeholder","Categories","initial","UI","counter","waitingForResponse","Login","errorMessage","Register","BM","user","firstname","lastname","username","password","email","advertises","reducerFunctions","reducer","state","log","newState","JSON","parse","stringify","reducerFunction","undefined","INIT","createBrowserHistory","login_error","user_logged_in","user_logged_out","getBMState","onClick","this","handleLogout","onSubmit","handleSubmit","htmlFor","onChange","handleUsernameChange","value","handlePasswordChange","event","target","update_user","clientAction","preventDefault","uiAction","server_called","axios","post","then","res","data","console","loggedinAction","history","push","get","loggedoutAction","Component","register_error","updateAction","user_created","handleFirstnameChange","handleLastnameChange","handleEmailChange","advertise_updated","update_advertise","advertiseToChange","filter","advertise","_id","advertise_title","advertise_type","advertise_description","advertise_category","advertise_price","advertise_pictureUrl","advertise_owner","advertise_comment","advertise_counter","advertise_status","advertise_message","advertise_city","delete_advertise","deleteAction","advertisesToKeep","SingleAdvertise","handleSwitchToEditMode","setState","edit_mode","handleTitleChange","newAdvertise","handleTypeChange","handleDescriptionChange","handleCategoryChange","handlePriceChange","handlePictureUrlChange","handleStatusChange","handleCityChange","handleSave","put","handleDelete","edit","locationProp","location","pathname","size","rows","cols","maxLength","checked","React","PureComponent","create_advertise","ShowAllAdvertises","handleCreateAdvertise","bind","renderAdds","item","map","key","mongoose","Types","ObjectId","toString","copyrightImg","add_advertises_from_server","App","response","responseAction","catch","error","NavBar","path","component","exact","Boolean","hostname","match","reduxMiddleware","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReduxThunk","store","message","getState","createStore","dispatch","initializeStore","ReactDOM","render","stateCounter","document","getElementById","getStore","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f37edb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/benb-logo.c771846f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/C.887f96e7.jpg\";","export enum ActionType {\r\n    INIT = \"@@INIT\",\r\n    login_error = \"login_error\",\r\n    register_error = \"register_error\",\r\n    user_logged_in = \"user_logged_in\",\r\n    user_logged_out = \"user_logged_out\",\r\n    update_user = \"update_user\",\r\n    user_created = \"user_created\",\r\n    user_exists = \"user_exists\",\r\n    create_advertise = \"create_advertise\",\r\n    update_advertise = \"update_advertise\",\r\n    delete_advertise = \"delete_advertise\",\r\n    render_test = \"render_test\",\r\n    server_called = \"server_called\",\r\n    advertise_updated = \"advertise_updated\",\r\n    add_advertises_from_server = \"add_advertises_from_server\" \r\n}\r\nexport interface IAction {\r\n    type: ActionType;\r\n}\r\n","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { IWindow } from '../framework/IWindow';\r\n\r\nconst logoName = require('../images/benb-logo.jpg')\r\ndeclare let window: IWindow;\r\n\r\nconst nav = (props: any) => {\r\n    if (window.CS.getUIState().loggedIn) {\r\n        return (\r\n            <nav>\r\n                <div id=\"showlogo\">\r\n                    <img src={logoName} alt=\"BENB-Board\" />\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        <li></li>\r\n                        <li><NavLink to=\"/\">Home</NavLink></li>\r\n                        <div className=\"nav-search\">\r\n                            <form action=\"/search-advertisements\" method=\"get\">\r\n                                <input type=\"text\" name=\"title\" placeholder=\"Search an advertisement by title\" />\r\n                                <button type=\"submit\">Search advertisement by title</button>\r\n                            </form>\r\n                        </div>\r\n                        <li><NavLink to=\"/showadvertises\">Advertises</NavLink></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <nav>\r\n                <div id=\"showlogo\">\r\n                    <img src={logoName} alt=\"BENB-Board\" />\r\n                </div>\r\n                <div>\r\n                    <ul>\r\n                        <li></li>\r\n                        <li><NavLink to=\"/\">Home</NavLink></li>\r\n                        <div className=\"nav-search\">\r\n                            <form action=\"/search-advertisements\" method=\"get\">\r\n                                <input type=\"text\" name=\"title\" placeholder=\"Search an advertisement by title\" />\r\n                                <button type=\"submit\">Search advertisement by title</button>\r\n                            </form>\r\n                        </div>\r\n                        <li><NavLink to=\"/login\">Login</NavLink></li>\r\n                        <li><NavLink to=\"/register\">Register</NavLink></li>\r\n                        {/*<li><NavLink to=\"/showadvertises\">Advertises</NavLink></li>*/}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default nav;","import * as React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Categories = (props: any) => {\r\n    return (\r\n        <div className=\"categories\">\r\n            <h2>Categories</h2>\r\n            <ul>\r\n\r\n                <li><NavLink to=\"/\">antiques & collectors</NavLink></li>\r\n                <li><NavLink to=\"/\">car, motorcycle & accessories</NavLink></li>\r\n                <li><NavLink to=\"/\">baby & kids</NavLink></li>\r\n                <li><NavLink to=\"/\">beauty & wellness</NavLink></li>\r\n                <li><NavLink to=\"/\">books, movies & music</NavLink></li>\r\n                <li><NavLink to=\"/\">electronics & computer</NavLink></li>\r\n                <li><NavLink to=\"/\">mobile phone & equipment</NavLink></li>\r\n                <li><NavLink to=\"/\">pet needs</NavLink></li>\r\n                <li><NavLink to=\"/\">hobby & leisure</NavLink></li>\r\n                <li><NavLink to=\"/\">property</NavLink></li>\r\n                <li><NavLink to=\"/\">jobs & services</NavLink></li>\r\n                <li><NavLink to=\"/\">clothes & fashion</NavLink></li>\r\n                <li><NavLink to=\"/\">furniture, housing & household</NavLink></li>\r\n                <li><NavLink to=\"/\">jewelry & accessories</NavLink></li>\r\n                <li><NavLink to=\"/\">games & consoles</NavLink></li>\r\n                <li><NavLink to=\"/\">sports, travel & outdoor</NavLink></li>\r\n                <li><NavLink to=\"/\">tickets & events</NavLink></li>\r\n                <li><NavLink to=\"/\">moving & help</NavLink></li>\r\n                <li><NavLink to=\"/\">tools</NavLink></li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Categories;","export interface IUser {\r\n    _id?: string;\r\n    firstname:string;\r\n    lastname:string;\r\n    username:string;\r\n    password:string;\r\n    email: string;\r\n}\r\n\r\n\r\nexport interface ILogin{\r\n    errorMessage:string;\r\n}\r\nexport interface IRegister{\r\n    errorMessage:string;\r\n}\r\n\r\nexport interface IUI {\r\n    counter: number;\r\n    loggedIn: boolean;\r\n    waitingForResponse: boolean;\r\n    Login: ILogin;\r\n    Register: IRegister;\r\n}\r\n\r\nexport interface IAdvertiseData {\r\n    _id: string;\r\n    advertise_title: string;\r\n    advertise_type: string;\r\n    advertise_category: [];\r\n    advertise_description: string;\r\n    advertise_price: string;\r\n    advertise_pictureUrl: string;\r\n    advertise_owner?: string;\r\n    advertise_comment?: string;\r\n    advertise_counter: number;\r\n    advertise_status: string;\r\n    advertise_message?: string;\r\n    advertise_city: string;\r\n  }\r\n\r\n\r\nexport interface IBM{\r\n    user:IUser;\r\n    advertises:IAdvertiseData[]\r\n}\r\n\r\n\r\nexport interface IState{\r\n    UI:IUI;\r\n    BM:IBM;\r\n}\r\n\r\n// initial state \r\nexport const initial:IState = {\r\n\tUI: {\r\n\t\tcounter: 0,\r\n\t\tloggedIn: false,\r\n        waitingForResponse: false,\r\n        Login: {errorMessage:\"\"},\r\n        Register: {errorMessage:\"\"}\r\n    },\r\n\tBM: {\r\n        user:{\r\n            firstname:\"\",\r\n            lastname:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            email: \"\"\r\n        },\r\n        advertises:[]\r\n\t}\r\n};\r\n","import { initial, IState } from '../state/appState'\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { IAction, ActionType } from '../framework/IAction'\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport const reducerFunctions:any = {};\r\n\r\nexport const reducer = (state = initial, action: IAction) => {\r\n    window.CS.log(\"2. ACTION:\" + action.type);\r\n    let newState:IState = JSON.parse(JSON.stringify(state)) as IState;\r\n    newState.UI.counter = state.UI.counter + 1;\r\n    const reducerFunction = reducerFunctions[action.type];\r\n\tif (reducerFunction !== undefined) {\r\n\t\treducerFunction(newState,action);\r\n        return newState;\r\n    }\r\n    switch (action.type) {\r\n        case ActionType.INIT:\r\n            return newState;\r\n        default:\r\n            window.CS.log(\"1. Error!!!!! no reducer defined\");\r\n            return newState;\r\n    }\r\n}\r\n\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState';\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport { IUserAction } from './Register';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nreducerFunctions[ActionType.login_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_in] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = true;\r\n    newState.BM.user = action.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_logged_out] = function (newState: IState, action: IUserAction) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Login.errorMessage = \"\";\r\n    newState.UI.loggedIn = false;\r\n    newState.BM.user = {lastname:\"\",firstname:\"\",username:\"\",password:\"\",email:\"\"};\r\n    return newState\r\n}\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        if (window.CS.getUIState().loggedIn)\r\n        return (\r\n            <div>\r\n                <p>You are logged in as {window.CS.getBMState().user.username}</p>\r\n                <button onClick={this.handleLogout}>Logout</button>\r\n            </div>\r\n        )\r\n    else\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Login\" />\r\n                </form>\r\n                <p>{window.CS.getUIState().Login.errorMessage}</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/login', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.login_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const loggedinAction: IUserAction = {\r\n                        type: ActionType.user_logged_in,\r\n                        user: data as IUser\r\n                    }\r\n                    window.CS.clientAction(loggedinAction);\r\n                    history.push(\"/showadvertises\");\r\n                }\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.get('/auth/logout').then(res => {\r\n            const loggedoutAction: IAction = {\r\n                type: ActionType.user_logged_out\r\n            }\r\n            window.CS.clientAction(loggedoutAction);\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IState, IUser } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport history from '../framework/history';\r\n\r\ndeclare let window: IWindow;\r\n\r\nexport interface IErrorMessage extends IAction {\r\n    errorMessage: string;\r\n}\r\n\r\nexport interface IUserAction extends IAction {\r\n    user: IUser\r\n}\r\n\r\nreducerFunctions[ActionType.register_error] = function (newState: IState, action: IErrorMessage) {\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.Register.errorMessage = action.errorMessage;\r\n    return newState\r\n}\r\n\r\nreducerFunctions[ActionType.update_user] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.BM.user = updateAction.user;\r\n    return newState\r\n}\r\nreducerFunctions[ActionType.user_created] = function (newState: IState, updateAction: IUserAction) {\r\n    console.log(updateAction.user);\r\n    newState.UI.waitingForResponse = false;\r\n    newState.UI.loggedIn = true;\r\n    return newState\r\n}\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"firstname\">First name:</label>\r\n                    <input type=\"text\" placeholder=\"firstname\" onChange={this.handleFirstnameChange} value={window.CS.getBMState().user.firstname} />\r\n                    <br />\r\n                    <label htmlFor=\"lastname\">Last name:</label>\r\n                    <input type=\"text\" placeholder=\"lastname\" onChange={this.handleLastnameChange} value={window.CS.getBMState().user.lastname} />\r\n                    <br />\r\n                    <label htmlFor=\"username\">Username:</label>\r\n                    <input type=\"username\" placeholder=\"Your username\" onChange={this.handleUsernameChange} value={window.CS.getBMState().user.username} />\r\n                    <br />\r\n                    <label htmlFor=\"password\">Password:</label>\r\n                    <input type=\"password\" placeholder=\"********\" onChange={this.handlePasswordChange} value={window.CS.getBMState().user.password} />\r\n                    <br />\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input type=\"email\" placeholder=\"yourname@mail.com\" onChange={this.handleEmailChange} value={window.CS.getBMState().user.email} />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Register as new User\" />\r\n                </form>\r\n                <p>{window.CS.getUIState().Register.errorMessage}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleFirstnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.firstname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleLastnameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.lastname = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleUsernameChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.username = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handlePasswordChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.password = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleEmailChange(event: any) {\r\n        let user = window.CS.getBMState().user;\r\n        user.email = event.target.value\r\n        const action: IUserAction = {\r\n            type: ActionType.update_user,\r\n            user: user\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n    handleSubmit(event: any) {\r\n        event.preventDefault();\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/auth/signup', window.CS.getBMState().user)\r\n            .then(res => {\r\n                const data = res.data;\r\n                console.log(data);\r\n                if (data.errorMessage) {\r\n                    const uiAction: IErrorMessage = {\r\n                        type: ActionType.register_error,\r\n                        errorMessage: data.errorMessage\r\n                    }\r\n                    window.CS.clientAction(uiAction);\r\n                } else {\r\n                    const uiAction: IAction = {\r\n                        type: ActionType.user_created\r\n                    }\r\n                    history.push('/');\r\n                    window.CS.clientAction(uiAction);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { IAdvertiseAction } from './ShowAllAdvertises';\r\nimport { ActionType, IAction } from '../framework/IAction';\r\nimport { IAdvertiseData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nimport { IWindow } from '../framework/IWindow';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\ndeclare let window: IWindow;\r\n\r\n//this file defines the React component that renders a single asset to the browser window\r\n//it also contains the logic to change asset properties and save the changes to the database\r\n//most of the used React framework features are already explained in the comments of App.js\r\n//so this code hopefully mostly explains itself ...\r\n\r\ninterface IProps {\r\n    edit: boolean;\r\n    advertise: IAdvertiseData;\r\n}\r\n\r\ninterface IJSXState {\r\n    edit_mode: boolean;\r\n}\r\n\r\nreducerFunctions[ActionType.advertise_updated] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n    newState.UI.waitingForResponse = false;\r\n}\r\nreducerFunctions[ActionType.update_advertise] = function (newState: IState, updateAction: IAdvertiseAction) {\r\n    let advertiseToChange: IAdvertiseData[] = newState.BM.advertises.filter(advertise => advertise._id === updateAction.advertise._id)\r\n    console.log(advertiseToChange);\r\n    advertiseToChange[0].advertise_title = updateAction.advertise.advertise_title;\r\n    advertiseToChange[0].advertise_type = updateAction.advertise.advertise_type;\r\n    advertiseToChange[0].advertise_description = updateAction.advertise.advertise_description;\r\n    advertiseToChange[0].advertise_category = updateAction.advertise.advertise_category;\r\n    advertiseToChange[0].advertise_price = updateAction.advertise.advertise_price;\r\n    advertiseToChange[0].advertise_pictureUrl = updateAction.advertise.advertise_pictureUrl;\r\n    advertiseToChange[0].advertise_owner = updateAction.advertise.advertise_owner;\r\n    advertiseToChange[0].advertise_comment = updateAction.advertise.advertise_comment;\r\n    advertiseToChange[0].advertise_counter = updateAction.advertise.advertise_counter;\r\n    advertiseToChange[0].advertise_status = updateAction.advertise.advertise_status;\r\n    advertiseToChange[0].advertise_message = updateAction.advertise.advertise_message;\r\n    advertiseToChange[0].advertise_city = updateAction.advertise.advertise_city;\r\n    return newState;\r\n}\r\nreducerFunctions[ActionType.delete_advertise] = function (newState: IState, deleteAction: IAdvertiseAction) {\r\n    let advertisesToKeep: IAdvertiseData[] = newState.BM.advertises.filter(advertise => advertise._id !== deleteAction.advertise._id)\r\n    newState.BM.advertises = advertisesToKeep;\r\n    return newState;\r\n}\r\n\r\n\r\nexport default class SingleAdvertise extends React.PureComponent<IProps, IJSXState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            edit_mode: props.edit,\r\n        }\r\n    }\r\n    handleSwitchToEditMode = () => {\r\n        this.setState({ edit_mode: true });\r\n    }\r\n    handleTitleChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_title = event.target.value\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleTypeChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_type = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleDescriptionChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_description = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleCategoryChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_category = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handlePriceChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_price = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handlePictureUrlChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_pictureUrl = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleStatusChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_status = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleCityChange = (event: any) => {\r\n        const newAdvertise = this.props.advertise;\r\n        newAdvertise.advertise_city = event.target.value;\r\n        const action: IAdvertiseAction = {\r\n            type: ActionType.update_advertise,\r\n            advertise: newAdvertise\r\n        }\r\n        window.CS.clientAction(action);\r\n    }\r\n\r\n    handleSave = (event: any) => {\r\n        this.setState({ edit_mode: false });\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.put('/advertises/update/' + this.props.advertise._id, this.props.advertise)\r\n            .then(res => {\r\n                const uiAction: IAction = {\r\n                    type: ActionType.advertise_updated\r\n                }\r\n                window.CS.clientAction(uiAction);\r\n            });\r\n    }\r\n    handleDelete = () => {\r\n        const uiAction: IAction = {\r\n            type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        axios.post('/advertises/delete/' + this.props.advertise._id)\r\n            .then(res => {\r\n                const action: IAdvertiseAction = {\r\n                    type: ActionType.delete_advertise,\r\n                    advertise: this.props.advertise\r\n                }\r\n                window.CS.clientAction(action)\r\n            });\r\n    }\r\n    render() {\r\n        let locationProp = this.props as any;\r\n        //if the component is in edit mode, it will render different than if it just shows the data\r\n        if (this.state.edit_mode && locationProp.location.pathname === \"/showadvertises\")\r\n            return (\r\n                <div className=\"wholeProduct\">\r\n                    <ul className=\"ulProduct\">\r\n                        <li className=\"titleName\">Title: <br></br> <input size={50} type=\"text\" name=\"title\" value={this.props.advertise.advertise_title} onChange={this.handleTitleChange} /></li>\r\n                        <li>PictureUrl: <br></br> <input size={50} type=\"text\" name=\"pictureUrl\" value={this.props.advertise.advertise_pictureUrl} onChange={this.handlePictureUrlChange} /></li>\r\n                        <li className=\"price\">Price: <br></br> <input size={50} type=\"text\" name=\"price\" value={this.props.advertise.advertise_price} onChange={this.handlePriceChange} /></li>\r\n                        <li className=\"description\">\r\n                            <label htmlFor=\"description\">Description: <br></br> </label>\r\n                            <textarea rows={5} cols={52} maxLength={300} name=\"description\" value={this.props.advertise.advertise_description} onChange={this.handleDescriptionChange} ></textarea>\r\n                        </li>\r\n                        {/*<li className=\"owner\">Owner: <br></br> {this.props.advertise.advertise_owner}</li>*/}\r\n                        <li className=\"city\">City: <br></br> <input size={50} type=\"text\" name=\"city\" value={this.props.advertise.advertise_city} onChange={this.handleCityChange} /></li>\r\n                        <li className=\"type\">\r\n                            <label htmlFor=\"type\">Choose a Type: <br></br> </label>\r\n                            <input type=\"radio\" name=\"type\" value=\"offer\" checked={this.props.advertise.advertise_type === \"offer\"} onClick={this.handleTypeChange} /> <span className=\"offerOrange\">offer</span>\r\n                            <input type=\"radio\" name=\"type\" value=\"search\" checked={this.props.advertise.advertise_type === \"search\"} onClick={this.handleTypeChange} /> <span className=\"searchBlue\">search</span>\r\n                        </li>\r\n                        <li className=\"status\">\r\n                            <label htmlFor=\"status\">Choose a Status: <br></br> </label>\r\n                            <input type=\"radio\" name=\"status\" value=\"available\" checked={this.props.advertise.advertise_status === \"available\"} onClick={this.handleStatusChange} /> <span className=\"availableGreen\">available</span>\r\n                            <input type=\"radio\" name=\"status\" value=\"sold\" checked={this.props.advertise.advertise_status === \"sold\"} onClick={this.handleStatusChange} /> <span>sold</span>\r\n                        </li>\r\n                        {/*<li className=\"comment\">Comment: <br></br> {this.props.advertise.advertise_comment}</li>*/}\r\n                        {/*<li className=\"message\">Message: <br></br> {this.props.advertise.advertise_message}</li>*/}\r\n                        <li className=\"category\">\r\n                        Category: <br></br> <select className=\"selectBox\" name=\"category\" value={this.props.advertise.advertise_category} onChange={this.handleCategoryChange}>\r\n                            <option value=\"---\">---</option>\r\n                            <option value=\"antiques & collectors\">antiques & collectors</option>\r\n                            <option value=\"car, motorcycle & accessories\">car, motorcycle & accessories</option>\r\n                            <option value=\"baby & kids\">baby & kids</option>\r\n                            <option value=\"beauty & wellness\">beauty & wellness</option>\r\n                            <option value=\"books, movies & music\">books, movies & music</option>\r\n                            <option value=\"electronics & computer\">electronics & computer</option>\r\n                            <option value=\"mobile phone & equipment\">mobile phone & equipment</option>\r\n                            <option value=\"pet needs\">pet needs</option>\r\n                            <option value=\"hobby & leisure\">hobby & leisure</option>\r\n                            <option value=\"property\">property</option>\r\n                            <option value=\"jobs & services\">jobs & services</option>\r\n                            <option value=\"clothes & fashion\">clothes & fashion</option>\r\n                            <option value=\"furniture, housing & household\">furniture, housing & household</option>\r\n                            <option value=\"jewelry & accessories\">jewelry & accessories</option>\r\n                            <option value=\"games & consoles\">games & consoles</option>\r\n                            <option value=\"sports, travel & outdoor\">sports, travel & outdoor</option>\r\n                            <option value=\"tickets & events\">tickets & events</option>\r\n                            <option value=\"moving & help\">moving & help</option>\r\n                            <option value=\"tools\">tools</option>\r\n                            </select>\r\n                        </li>\r\n                        {/*<li className=\"counter\">Counter: <br></br> {this.props.advertise.advertise_counter}</li>*/}\r\n                        <li className=\"buttonsArea\">\r\n                            <button onClick={this.handleSave} id={this.props.advertise._id}>save</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        else if (window.CS.getUIState().loggedIn && locationProp.location.pathname === \"/showadvertises\") {\r\n            return (\r\n\r\n                <div className=\"wholeProduct\">\r\n                    <ul className=\"ulProduct\">\r\n                    <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n                        <li><img className=\"picture\" src={this.props.advertise.advertise_pictureUrl} alt=\"Picture\" /></li>\r\n                        <li className=\"price\"><span className=\"priceName\">Price:</span> <br></br> {this.props.advertise.advertise_price}</li>\r\n                        <li className=\"description\"><span className=\"descriptionName\">Description:</span> <br></br> {this.props.advertise.advertise_description}</li>\r\n                        <li className=\"owner\"><span className=\"ownerName\">Owner:</span> <br></br> {this.props.advertise.advertise_owner}</li>\r\n                        <li className=\"city\"><span className=\"cityName\">City:</span> <br></br> {this.props.advertise.advertise_city}</li>\r\n                        <li className=\"type\"><span className=\"typeName\">Type:</span> <br></br> {this.props.advertise.advertise_type}</li>\r\n                        <li className=\"status\"><span className=\"statusName\">Status:</span> <br></br> {this.props.advertise.advertise_status} </li>\r\n                        <li className=\"comment\"><span className=\"commentName\">Comment:</span> <br></br> {this.props.advertise.advertise_comment}</li>\r\n                        <li className=\"message\"><span className=\"messageName\">Message:</span> <br></br> {this.props.advertise.advertise_message}</li>\r\n                        <li className=\"category\"><span className=\"categoryName\">Category:</span> <br></br> {this.props.advertise.advertise_category}</li>\r\n                        <li className=\"counter\"><span className=\"counterName\">Counter:</span> <br></br> {this.props.advertise.advertise_counter}</li>\r\n                        <li className=\"buttonsArea\">\r\n                            <button onClick={this.handleSwitchToEditMode}>edit</button>\r\n                            <button onClick={this.handleDelete} id={this.props.advertise._id}>sell or dispose</button>\r\n                            {/*<button onClick={this.handleRerenderTest} >increase State Counter {window.CS.getUIState().counter}</button>*/}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n\r\n                <div className=\"wholeProduct\">\r\n                    <ul className=\"ulProduct\">\r\n                        <li className=\"title\">{this.props.advertise.advertise_title}</li>\r\n                        <li><img className=\"picture\" src={this.props.advertise.advertise_pictureUrl} alt=\"Picture\" /></li>\r\n                        <li className=\"price\"><span className=\"priceName\">Price:</span> <br></br> {this.props.advertise.advertise_price}</li>\r\n                        <li className=\"description\"><span className=\"descriptionName\">Description:</span> <br></br> {this.props.advertise.advertise_description}</li>\r\n                        <li className=\"owner\"><span className=\"ownerName\">Owner:</span> <br></br> {this.props.advertise.advertise_owner}</li>\r\n                        <li className=\"city\"><span className=\"cityName\">City:</span> <br></br> {this.props.advertise.advertise_city}</li>\r\n                        <li className=\"type\"><span className=\"typeName\">Type:</span> <br></br> {this.props.advertise.advertise_type}</li>\r\n                        <li className=\"status\"><span className=\"statusName\">Status:</span> <br></br> {this.props.advertise.advertise_status}</li>\r\n                        <li className=\"comment\"><span className=\"commentName\">Comment:</span> <br></br> {this.props.advertise.advertise_comment}</li>\r\n                        <li className=\"message\"><span className=\"messageName\">Message:</span> <br></br> {this.props.advertise.advertise_message}</li>\r\n                        <li className=\"category\"><span className=\"categoryName\">Category:</span> <br></br> {this.props.advertise.advertise_category}</li>\r\n                        <li className=\"counter\"><span className=\"counterName\">Counter:</span> <br></br> {this.props.advertise.advertise_counter}</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport SingleAdvertise from './SingleAdvertise'\r\nimport mongoose from 'mongoose';\r\nimport { IAction, ActionType } from '../framework/IAction';\r\nimport { IAdvertiseData, IState } from '../state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from '../reducer/appReducer';\r\nimport '../App.css';\r\n\r\nimport { IWindow } from '../framework/IWindow'\r\nimport { userInfo } from 'os';\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  user?: boolean\r\n};\r\ninterface IJSXState { };\r\nexport interface IAdvertiseAction extends IAction {\r\n  advertise: IAdvertiseData\r\n}\r\nreducerFunctions[ActionType.create_advertise] = function (newState: IState, action: IAdvertiseAction) {\r\n  console.log(\"test\", newState.BM.advertises);\r\n  newState.BM.advertises.push(action.advertise);\r\n  newState.UI.waitingForResponse = false;\r\n  return newState;\r\n}\r\n\r\nexport default class ShowAllAdvertises extends Component<IProps, IJSXState> {\r\n    constructor(props: any) {\r\n        console.log(\"new App component will be initialized\");\r\n        console.log(window.CS.getBMState());\r\n        super(props);\r\n        this.handleCreateAdvertise = this.handleCreateAdvertise.bind(this);\r\n      }\r\n    render() {\r\n      let locationProp = this.props as any;\r\n      const renderAdds = locationProp.location.pathname === \"/showadvertises\" \r\n      ?\r\n      window.CS.getBMState().advertises.filter((item: any) => item.advertise_owner === window.CS.getBMState().user.username)\r\n      :\r\n      window.CS.getBMState().advertises\r\n      console.log(renderAdds);\r\n      console.log(window.CS.getBMState().user);\r\n        if (window.CS.getUIState().loggedIn){\r\n          \r\n        return (\r\n          <div>\r\n          {/*{window.CS.getUIState().waitingForResponse.toString()}{window.CS.getUIState().counter}*/}\r\n          {\r\n          locationProp.location.pathname === \"/showadvertises\" &&\r\n          <>\r\n            <h1 className=\"textFromWholeProduct\">show all own advertises</h1>\r\n            <p className=\"textFromWholeProduct\">to create a new advertise click this button:&nbsp;\r\n              <button onClick={this.handleCreateAdvertise}>create advertise</button>\r\n            </p>\r\n          </>\r\n          }\r\n          <div>\r\n          {renderAdds.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n        else \r\n        return (\r\n          <div>\r\n          {/*{window.CS.getUIState().waitingForResponse.toString()}{window.CS.getUIState().counter}*/}\r\n          <div>\r\n          {window.CS.getBMState().advertises.map(advertise => <SingleAdvertise key={advertise._id} {...this.props} advertise={advertise} edit={false} />)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n    handleCreateAdvertise() {\r\n        console.log(\"handleCreateAdvertise invoked\");\r\n        const uiAction: IAction = {\r\n          type: ActionType.server_called\r\n        }\r\n        window.CS.clientAction(uiAction);\r\n        const newAdvertise: IAdvertiseData = {\r\n          _id: mongoose.Types.ObjectId().toString(),\r\n          advertise_title: \"\",\r\n          advertise_type:\"offer\",\r\n          advertise_description: \"\",\r\n          advertise_category: [],\r\n          advertise_price: \"\",\r\n          advertise_owner: window.CS.getBMState().user.username.toString(),\r\n          advertise_pictureUrl: \"\",\r\n          advertise_counter: 0,\r\n          advertise_status: \"available\",\r\n          advertise_city: \"\"\r\n        }\r\n        const action: IAdvertiseAction = {\r\n          type: ActionType.create_advertise,\r\n          advertise: newAdvertise\r\n        }\r\n        axios.post('/advertises/add', newAdvertise)\r\n        .then(res => {\r\n          window.CS.clientAction(action);\r\n          console.log('test:', res.data)\r\n        });\r\n      }\r\n}\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Categories from './components/Categories';\r\nimport Userdetails from './components/Userdetails';\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport Register from './components/Register';\r\nimport ShowAllAdvertises from './components/ShowAllAdvertises';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { IAction, ActionType } from './framework/IAction';\r\nimport { IAdvertiseData, IState } from './state/appState'\r\nimport axios from 'axios';\r\nimport { reducerFunctions } from './reducer/appReducer';\r\nimport './App.css';\r\n\r\nimport { IWindow } from './framework/IWindow'\r\n\r\nconst copyrightImg = require('./images/C.jpg')\r\ndeclare let window: IWindow;\r\n\r\ninterface IProps {\r\n  stateCounter: number\r\n}\r\n\r\nexport interface IAdvertisesLoadedAction extends IAction {\r\n  advertises: IAdvertiseData[]\r\n}\r\nreducerFunctions[ActionType.server_called] = function (newState: IState, action: IAction) {\r\n  newState.UI.waitingForResponse = true;\r\n  return newState;\r\n}\r\nreducerFunctions[ActionType.add_advertises_from_server] = function (newState: IState, action: IAdvertisesLoadedAction) {\r\n  newState.UI.waitingForResponse = false;\r\n  newState.BM.advertises = action.advertises;\r\n  return newState;\r\n}\r\nexport default class App extends React.PureComponent<IProps> {\r\n\r\n  componentDidMount() {\r\n    const uiAction: IAction = {\r\n      type: ActionType.server_called\r\n    }\r\n    window.CS.clientAction(uiAction);\r\n    axios.get('/advertises/read').then(response => {\r\n      console.log(\"this data was loaded as a result of componentDidMount:\");\r\n      console.log(response.data);\r\n      const responseAction: IAdvertisesLoadedAction = {\r\n        type: ActionType.add_advertises_from_server,\r\n        advertises: response.data as IAdvertiseData[]\r\n      }\r\n      window.CS.clientAction(responseAction);\r\n    }).catch(function (error) { console.log(error); })\r\n  }\r\n  render() {\r\n    window.CS.log(\"App --> render()\")\r\n    if (window.CS.getUIState().loggedIn) {\r\n    return (\r\n      <div className=\"container-body\">\r\n        <NavBar /> {/* oben  */}\r\n        <div className=\"container-main-content\"> {/* mitte */}\r\n          <div className=\"container-categories\">\r\n            <Categories />\r\n          </div> {/* mitte links */}\r\n          <Switch>\r\n            <Route path=\"/showadvertises\" user={window.CS.getUIState().loggedIn} component={ShowAllAdvertises} />\r\n            <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n            <Route exact={true} path=\"/\" component={ShowAllAdvertises} />\r\n          </Switch>\r\n          <div className=\"container-userdetails\">\r\n          <Login />\r\n          </div> {/* mitte rechts */}\r\n        </div>\r\n        <div className=\"footer\"> {/* unten */}\r\n          <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n          </div>\r\n      </div>\r\n    )} else {\r\n      return (\r\n        <div className=\"container-body\">\r\n          <NavBar /> {/* oben  */}\r\n          <div className=\"container-main-content\"> {/* mitte */}\r\n            <div className=\"container-categories\">\r\n              <Categories />\r\n            </div> {/* mitte links */}\r\n            <Switch>\r\n              <Route path=\"/showadvertises\" component={ShowAllAdvertises} />\r\n              <Route path=\"/register\" component={Register} /> {/* mitte mitte */}\r\n              <Route exact={true} path=\"/\" component={ShowAllAdvertises} />\r\n            </Switch>\r\n            <div className=\"container-userdetails\">\r\n            <Route path=\"/login\" component={Login} />\r\n            </div> {/* mitte rechts */}\r\n          </div>\r\n          <div className=\"footer\"> {/* unten */}\r\n            <img src={copyrightImg} alt=\"Copyright by BENB\" />Copyright by BENB\r\n            </div>\r\n        </div>\r\n      )}\r\n    ;\r\n  }\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { reducer } from '../reducer/appReducer'\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { IUI, IBM } from '../state/appState';\r\nimport { IWindow } from './IWindow'\r\nimport { IAction } from './IAction';\r\ndeclare let window: IWindow;\r\n\r\n//Dev tools are needed so we can see the state in the browser\r\n//Redux thunk is needed for actions that make a rest call in order to create another action, when the server responds\r\nlet reduxMiddleware: any;\r\nif (window.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    reduxMiddleware = compose(\r\n        applyMiddleware(ReduxThunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n} else { reduxMiddleware = applyMiddleware(ReduxThunk); }\r\n\r\n\r\nexport class CS {\r\n    private store: any;\r\n    public log(message: string) {\r\n        console.log(message);\r\n    }\r\n    public getStore(){\r\n        return this.store;\r\n    }\r\n    public getState() {\r\n        return this.store.getState();\r\n    }\r\n    public getUIState() {\r\n        return this.getState().UI as IUI;\r\n    }\r\n    public getBMState() {\r\n        return this.getState().BM as IBM;\r\n    }\r\n    public initializeStore() {\r\n        this.store = createStore(\r\n            reducer,\r\n            reduxMiddleware\r\n        );\r\n    }\r\n   //changed this to any because of the thunk returning a function ...\r\n   public clientAction(action:IAction | Function){\r\n    this.store.dispatch(action);\r\n    }\r\n    public getDBServerURL_test(){\r\n        console.log(\"test server reached\")\r\n        //return \"https://patricks-boilerplate.herokuapp.com/\";\r\n        return \"https://localhost:8080\";\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport history from './framework/history';\r\n//import framework components\r\n//CS: ClientServices, we will use them a lot, so to shorten the code they are just called: CS\r\nimport { CS } from './framework/CS';\r\n//we will add a CS instance to the window object.\r\n//We also want the window object strictly typed, so we declare that window has the type \"IWindow\"\r\nimport { IWindow } from './framework/IWindow'\r\ndeclare let window: IWindow;\r\nwindow.CS = new CS();\r\n//we create the inital Application State\r\nwindow.CS.initializeStore();\r\n\r\n//now we can render this state to the DOM using React\r\nReactDOM.render(\r\n  <Router history={history}>\r\n  <App stateCounter={window.CS.getUIState().counter} />\r\n  </Router>\r\n, document.getElementById('root'));\r\n\r\n\r\n//whenever there is a new state, we render the whole virtual DOM again\r\n//React will take care that only the differences from the previous and\r\n//the current virtual DOM will be rendered to the browser DOM\r\nwindow.CS.getStore().subscribe(() => {\r\n  window.CS.log(\"3. before render ---------------------------------------------\");\r\n  ReactDOM.render(<Router history={history}>\r\n                  <App stateCounter={window.CS.getUIState().counter} />\r\n                  </Router>, document.getElementById('root'));\r\n  window.CS.log(\"3. after render ---------------------------------------------\");\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}